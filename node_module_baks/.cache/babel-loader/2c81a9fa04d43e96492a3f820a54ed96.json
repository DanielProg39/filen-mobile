{"ast":null,"code":"import * as language from \"../utils/language\";\nimport { Plugins, Capacitor } from \"@capacitor/core\";\nimport { modalController } from \"@ionic/core\";\nimport * as Ionicons from 'ionicons/icons';\n\nconst utils = require(\"../utils/utils\");\n\nexport async function showRegister() {\n  let appLang = this.state.lang;\n  let appDarkMode = this.state.darkMode;\n  let modalId = \"register-modal-\" + utils.generateRandomClassName();\n  customElements.define(modalId, class ModalContent extends HTMLElement {\n    connectedCallback() {\n      this.innerHTML = `\n                <ion-header class=\"ion-header-no-shadow\" style=\"--background: transparent;\">\n                    <ion-toolbar style=\"--background: transparent;\">\n                        <ion-buttons>\n                            <ion-button onClick=\"window.customFunctions.dismissModal()\">\n                                <ion-icon slot=\"icon-only\" icon=\"` + Ionicons.arrowBack + `\"></ion-icon>\n                            </ion-button>\n                        </ion-buttons>\n                    </ion-toolbar>\n                </ion-header>\n                <ion-content fullscreen>\n                    <div style=\"position: absolute; left: 50%; top: 50%; -webkit-transform: translate(-50%, -50%); transform: translate(-50%, -50%); width: 100%;\">\n                        <center>\n                            <ion-avatar>\n                                <img src=\"assets/img/icon.png\">\n                            </ion-avatar>\n                            <ion-item style=\"width: 90%; margin-top: 30px;\">\n                                <ion-input type=\"text\" id=\"register-email\" placeholder=\"` + language.get(appLang, \"emailPlaceholder\") + `\"></ion-input>\n                            </ion-item>\n                            <ion-item style=\"width: 90%;\">\n                                <ion-input type=\"password\" id=\"register-password\" placeholder=\"` + language.get(appLang, \"passwordPlaceholder\") + `\"></ion-input>\n                            </ion-item>\n                            <ion-item style=\"width: 90%;\">\n                                <ion-input type=\"password\" id=\"register-password-repeat\" placeholder=\"` + language.get(appLang, \"passwordRepeatPlaceholder\") + `\"></ion-input>\n                            </ion-item>\n                            <div style=\"width: 90%; margin-top: 25px;\">\n                                <small>` + utils.stripHtml(language.get(appLang, \"registerTOSInfo\")) + `</small>\n                            </div>\n                            <ion-button expand=\"block\" style=\"width: 90%; margin-top: 50px;\" onClick=\"window.customFunctions.doRegister()\">` + language.get(appLang, \"registerButton\") + `</ion-button>\n                            <br>\n                            OR\n                            <br>\n                            <br>\n                            <a onClick=\"window.customFunctions.dismissModal()\">` + language.get(appLang, \"loginLink\") + `</a>\n                        </center>\n                    </div>\n                </ion-content>\n            `;\n    }\n\n  });\n  let modal = await modalController.create({\n    component: modalId,\n    swipeToClose: false,\n    showBackdrop: false,\n    backdropDismiss: false,\n    cssClass: \"modal-fullscreen\"\n  });\n  return modal.present();\n}","map":{"version":3,"sources":["/Users/jan/Documents/filen/app/src/components/register.js"],"names":["language","Plugins","Capacitor","modalController","Ionicons","utils","require","showRegister","appLang","state","lang","appDarkMode","darkMode","modalId","generateRandomClassName","customElements","define","ModalContent","HTMLElement","connectedCallback","innerHTML","arrowBack","get","stripHtml","modal","create","component","swipeToClose","showBackdrop","backdropDismiss","cssClass","present"],"mappings":"AAAA,OAAO,KAAKA,QAAZ,MAA0B,mBAA1B;AACA,SAASC,OAAT,EAAkBC,SAAlB,QAAmC,iBAAnC;AACA,SAASC,eAAT,QAAgC,aAAhC;AACA,OAAO,KAAKC,QAAZ,MAA0B,gBAA1B;;AAEA,MAAMC,KAAK,GAAGC,OAAO,CAAC,gBAAD,CAArB;;AAEA,OAAO,eAAeC,YAAf,GAA6B;AAChC,MAAIC,OAAO,GAAG,KAAKC,KAAL,CAAWC,IAAzB;AACA,MAAIC,WAAW,GAAG,KAAKF,KAAL,CAAWG,QAA7B;AACA,MAAIC,OAAO,GAAG,oBAAoBR,KAAK,CAACS,uBAAN,EAAlC;AAEAC,EAAAA,cAAc,CAACC,MAAf,CAAsBH,OAAtB,EAA+B,MAAMI,YAAN,SAA2BC,WAA3B,CAAuC;AAClEC,IAAAA,iBAAiB,GAAE;AACf,WAAKC,SAAL,GAAkB;AAC9B;AACA;AACA;AACA;AACA,kEAL6B,GAKwChB,QAAQ,CAACiB,SALjD,GAK8D;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yFAjB6B,GAiB+DrB,QAAQ,CAACsB,GAAT,CAAad,OAAb,EAAsB,kBAAtB,CAjB/D,GAiB4G;AACzI;AACA;AACA,gGApB6B,GAoBsER,QAAQ,CAACsB,GAAT,CAAad,OAAb,EAAsB,qBAAtB,CApBtE,GAoBsH;AACnJ;AACA;AACA,uGAvB6B,GAuB6ER,QAAQ,CAACsB,GAAT,CAAad,OAAb,EAAsB,2BAAtB,CAvB7E,GAuBmI;AAChK;AACA;AACA,wCA1B6B,GA0BcH,KAAK,CAACkB,SAAN,CAAgBvB,QAAQ,CAACsB,GAAT,CAAad,OAAb,EAAsB,iBAAtB,CAAhB,CA1Bd,GA0B2E;AACxG;AACA,4IA5B6B,GA4BkHR,QAAQ,CAACsB,GAAT,CAAad,OAAb,EAAsB,gBAAtB,CA5BlH,GA4B6J;AAC1L;AACA;AACA;AACA;AACA,gFAjC6B,GAiCsDR,QAAQ,CAACsB,GAAT,CAAad,OAAb,EAAsB,WAAtB,CAjCtD,GAiC4F;AACzH;AACA;AACA;AACA,aArCY;AAsCH;;AAxCiE,GAAtE;AA2CA,MAAIgB,KAAK,GAAG,MAAMrB,eAAe,CAACsB,MAAhB,CAAuB;AACrCC,IAAAA,SAAS,EAAEb,OAD0B;AAErCc,IAAAA,YAAY,EAAE,KAFuB;AAGrCC,IAAAA,YAAY,EAAE,KAHuB;AAIrCC,IAAAA,eAAe,EAAE,KAJoB;AAKrCC,IAAAA,QAAQ,EAAE;AAL2B,GAAvB,CAAlB;AAQA,SAAON,KAAK,CAACO,OAAN,EAAP;AACH","sourcesContent":["import * as language from \"../utils/language\"\r\nimport { Plugins, Capacitor } from \"@capacitor/core\"\r\nimport { modalController } from \"@ionic/core\"\r\nimport * as Ionicons from 'ionicons/icons';\r\n\r\nconst utils = require(\"../utils/utils\")\r\n\r\nexport async function showRegister(){\r\n    let appLang = this.state.lang\r\n    let appDarkMode = this.state.darkMode\r\n    let modalId = \"register-modal-\" + utils.generateRandomClassName()\r\n\r\n    customElements.define(modalId, class ModalContent extends HTMLElement {\r\n        connectedCallback(){\r\n            this.innerHTML = `\r\n                <ion-header class=\"ion-header-no-shadow\" style=\"--background: transparent;\">\r\n                    <ion-toolbar style=\"--background: transparent;\">\r\n                        <ion-buttons>\r\n                            <ion-button onClick=\"window.customFunctions.dismissModal()\">\r\n                                <ion-icon slot=\"icon-only\" icon=\"` + Ionicons.arrowBack + `\"></ion-icon>\r\n                            </ion-button>\r\n                        </ion-buttons>\r\n                    </ion-toolbar>\r\n                </ion-header>\r\n                <ion-content fullscreen>\r\n                    <div style=\"position: absolute; left: 50%; top: 50%; -webkit-transform: translate(-50%, -50%); transform: translate(-50%, -50%); width: 100%;\">\r\n                        <center>\r\n                            <ion-avatar>\r\n                                <img src=\"assets/img/icon.png\">\r\n                            </ion-avatar>\r\n                            <ion-item style=\"width: 90%; margin-top: 30px;\">\r\n                                <ion-input type=\"text\" id=\"register-email\" placeholder=\"` + language.get(appLang, \"emailPlaceholder\") + `\"></ion-input>\r\n                            </ion-item>\r\n                            <ion-item style=\"width: 90%;\">\r\n                                <ion-input type=\"password\" id=\"register-password\" placeholder=\"` + language.get(appLang, \"passwordPlaceholder\") + `\"></ion-input>\r\n                            </ion-item>\r\n                            <ion-item style=\"width: 90%;\">\r\n                                <ion-input type=\"password\" id=\"register-password-repeat\" placeholder=\"` + language.get(appLang, \"passwordRepeatPlaceholder\") + `\"></ion-input>\r\n                            </ion-item>\r\n                            <div style=\"width: 90%; margin-top: 25px;\">\r\n                                <small>` + utils.stripHtml(language.get(appLang, \"registerTOSInfo\")) + `</small>\r\n                            </div>\r\n                            <ion-button expand=\"block\" style=\"width: 90%; margin-top: 50px;\" onClick=\"window.customFunctions.doRegister()\">` + language.get(appLang, \"registerButton\") + `</ion-button>\r\n                            <br>\r\n                            OR\r\n                            <br>\r\n                            <br>\r\n                            <a onClick=\"window.customFunctions.dismissModal()\">` + language.get(appLang, \"loginLink\") + `</a>\r\n                        </center>\r\n                    </div>\r\n                </ion-content>\r\n            `;\r\n        }\r\n    })\r\n\r\n    let modal = await modalController.create({\r\n        component: modalId,\r\n        swipeToClose: false,\r\n        showBackdrop: false,\r\n        backdropDismiss: false,\r\n        cssClass: \"modal-fullscreen\"\r\n    })\r\n\r\n    return modal.present()\r\n}"]},"metadata":{},"sourceType":"module"}