{"ast":null,"code":"import _regeneratorRuntime from\"/Users/jan/Documents/filen/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _classCallCheck from\"/Users/jan/Documents/filen/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/jan/Documents/filen/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/jan/Documents/filen/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/jan/Documents/filen/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import _wrapNativeSuper from\"/Users/jan/Documents/filen/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/wrapNativeSuper\";import _asyncToGenerator from\"/Users/jan/Documents/filen/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import*as language from\"../utils/language\";import{loadingController,modalController,popoverController,alertController,actionSheetController}from\"@ionic/core\";import*as Ionicons from'ionicons/icons';import{Capacitor,Plugins}from\"@capacitor/core\";var utils=require(\"../utils/utils\");export function openSettingsModal(){return _openSettingsModal.apply(this,arguments);}function _openSettingsModal(){_openSettingsModal=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var appLang,appDarkMode,appSettings,appState,deviceInfo,modalId,modal;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:appLang=this.state.lang;appDarkMode=this.state.darkMode;appSettings=this.state.settings;appState=this.state;_context2.next=6;return Plugins.Device.getInfo();case 6:deviceInfo=_context2.sent;modalId=\"settings-modal-\"+utils.generateRandomClassName();customElements.define(modalId,/*#__PURE__*/function(_HTMLElement){_inherits(ModalContent,_HTMLElement);var _super=_createSuper(ModalContent);function ModalContent(){_classCallCheck(this,ModalContent);return _super.apply(this,arguments);}_createClass(ModalContent,[{key:\"connectedCallback\",value:function connectedCallback(){this.innerHTML=\"\\n                <ion-header>\\n                    <ion-toolbar>\\n                        <ion-buttons slot=\\\"start\\\">\\n                            <ion-button onclick=\\\"window.customFunctions.dismissModal()\\\">\\n                                <ion-icon slot=\\\"icon-only\\\" icon=\\\"\"+Ionicons.arrowBack+\"\\\"></ion-icon>\\n                            </ion-button>\\n                        </ion-buttons>\\n                        <ion-title>\\n                            \"+language.get(appLang,\"settingsHeader\")+\"\\n                        </ion-title>\\n                    </ion-toolbar>\\n                </ion-header>\\n                <ion-content style=\\\"--background: \"+(appDarkMode?\"#1E1E1E\":\"white\")+\"\\\" fullscreen>\\n                    <ion-list>\\n                        <ion-item-divider style=\\\"--background: \"+(appDarkMode?\"#1E1E1E\":\"white\")+\"\\\">\\n                            <ion-label>\\n                                \"+language.get(appLang,\"settingsAccountHeader\")+\"\\n                            </ion-label>\\n                        </ion-item-divider>\\n                        <ion-item lines=\\\"none\\\">\\n                            <ion-label>\\n                                \"+appState.userEmail+\"\\n                            </ion-label>\\n                            <ion-buttons slot=\\\"end\\\">\\n                                <ion-button color=\\\"\"+(appDarkMode?\"dark\":\"light\")+\"\\\" fill=\\\"solid\\\" onClick=\\\"window.open('https://filen.io/my-account/file-manager/settings', '_system'); return false;\\\">\\n                                    \"+language.get(appLang,\"accountSettings\")+\"\\n                                </ion-button>\\n                            </ion-buttons>\\n                        </ion-item>\\n                        <ion-item lines=\\\"none\\\">\\n                            <ion-label>\\n                                \"+language.get(appLang,\"settingsAccountUsage\")+\"\\n                            </ion-label>\\n                            <ion-buttons slot=\\\"end\\\">\\n                                <ion-button fill=\\\"none\\\">\\n                                    \"+appState.userStorageUsageMenuText+\"\\n                                </ion-button>\\n                            </ion-buttons>\\n                        </ion-item>\\n                        <ion-item lines=\\\"none\\\">\\n                            <ion-label>\\n                                \"+language.get(appLang,\"settingsAccountPro\")+\"\\n                            </ion-label>\\n                            <ion-buttons slot=\\\"end\\\">\\n                                \"+(appState.userMaxStorage>=107374182400?\"\\n                                    <ion-button fill=\\\"none\\\">\\n                                        <ion-icon slot=\\\"icon-only\\\" icon=\\\"\"+Ionicons.checkbox+\"\\\"></ion-icon>\\n                                    </ion-button>\\n                                \":\"\\n                                    <ion-button fill=\\\"solid\\\" color=\\\"\"+(appDarkMode?\"dark\":\"light\")+\"\\\" onClick=\\\"window.open('https://filen.io/pro', '_system'); return false;\\\">\\n                                        \"+language.get(appLang,\"settingsAccountGoPro\")+\"\\n                                    </ion-button>\\n                                \")+\"\\n                            </ion-buttons>\\n                        </ion-item>\\n                        <ion-item-divider style=\\\"--background: \"+(appDarkMode?\"#1E1E1E\":\"white\")+\"\\\">\\n                            <ion-label>\\n                                \"+language.get(appLang,\"settingsGeneralHeader\")+\"\\n                            </ion-label>\\n                        </ion-item-divider>\\n                        <ion-item lines=\\\"none\\\">\\n                            <ion-label>\\n                                \"+language.get(appLang,\"darkMode\")+\"\\n                            </ion-label>\\n                            <ion-toggle slot=\\\"end\\\" id=\\\"settings-dark-mode-toggle\\\" onClick=\\\"window.customFunctions.settingsToggleDarkMode()\\\" \"+(appDarkMode&&\"checked\")+\"></ion-toggle>\\n                        </ion-item>\\n                        <ion-item lines=\\\"none\\\">\\n                            <ion-label>\\n                                \"+language.get(appLang,\"onlyUseWifiForDownloads\")+\"\\n                            </ion-label>\\n                            <ion-toggle slot=\\\"end\\\" id=\\\"settings-only-wifi-toggle\\\" onClick=\\\"window.customFunctions.toggleOnlyWifi()\\\" \"+(appSettings.onlyWifi&&\"checked\")+\"></ion-toggle>\\n                        </ion-item>\\n                        <ion-item lines=\\\"none\\\">\\n                            <ion-label>\"+language.get(appLang,\"settingsLanguage\")+\"</ion-label>\\n                            <ion-select id=\\\"settings-lang-select\\\" value=\\\"\"+appLang+\"\\\" cancel-text=\\\"\"+language.get(appLang,\"cancel\")+\"\\\" ok-text=\\\"\"+language.get(appLang,\"alertOkButton\")+\"\\\" interface=\\\"alert\\\">\\n                                \"+utils.getLanguageSelection()+\"\\n                            </ion-select>\\n                        </ion-item>\\n                        <ion-item-divider style=\\\"--background: \"+(appDarkMode?\"#1E1E1E\":\"white\")+\"\\\">\\n                            <ion-label>\\n                                \"+language.get(appLang,\"settingsAppHeader\")+\"\\n                            </ion-label>\\n                        </ion-item-divider>\\n                        <ion-item lines=\\\"none\\\">\\n                            <a onClick=\\\"window.customFunctions.doLogout()\\\">\"+language.get(appLang,\"settingsLogoutBtn\",true,[\"__EMAIL__\"],[appState.userEmail])+\"</a>\\n                        </ion-item>\\n                        <ion-item lines=\\\"none\\\">\\n                            <ion-label>\\n                                \"+language.get(appLang,\"settingsVersion\")+\"\\n                            </ion-label>\\n                            <ion-buttons slot=\\\"end\\\">\\n                                <ion-button fill=\\\"none\\\">\\n                                    \"+deviceInfo.appVersion+\"\\n                                </ion-button>\\n                            </ion-buttons>\\n                        </ion-item>\\n                        <ion-item lines=\\\"none\\\">\\n                            <ion-label>\\n                                \"+language.get(appLang,\"settingsClearThumbnailCache\")+\"\\n                            </ion-label>\\n                            <ion-buttons slot=\\\"end\\\">\\n                                <ion-button fill=\\\"solid\\\" color=\\\"\"+(appDarkMode?\"dark\":\"light\")+\"\\\" onClick=\\\"window.customFunctions.clearThumbnailCache()\\\">\\n                                    \"+language.get(appLang,\"settingsClearThumbnailCacheBtn\")+\"\\n                                </ion-button>\\n                            </ion-buttons>\\n                        </ion-item>\\n                    </ion-list>\\n                </ion-content>\\n            \";}}]);return ModalContent;}(/*#__PURE__*/_wrapNativeSuper(HTMLElement)));_context2.next=11;return modalController.create({component:modalId,swipeToClose:false,showBackdrop:false,backdropDismiss:false,cssClass:\"modal-fullscreen\"});case 11:modal=_context2.sent;_context2.next=14;return modal.present();case 14:clearInterval(window.customVariables.selectLangInterval);window.customVariables.selectLangInterval=setInterval(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var selectedLang;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(typeof document.getElementById(\"settings-lang-select\")==\"undefined\")){_context.next=2;break;}return _context.abrupt(\"return\",clearInterval(window.customVariables.selectLangInterval));case 2:if(!(document.getElementById(\"settings-lang-select\")==null)){_context.next=4;break;}return _context.abrupt(\"return\",clearInterval(window.customVariables.selectLangInterval));case 4:if(!(typeof document.getElementById(\"settings-lang-select\").value==\"undefined\")){_context.next=6;break;}return _context.abrupt(\"return\",clearInterval(window.customVariables.selectLangInterval));case 6:selectedLang=document.getElementById(\"settings-lang-select\").value;if(!(selectedLang!==appLang)){_context.next=13;break;}if(!language.isAvailable(selectedLang)){_context.next=13;break;}clearInterval(window.customVariables.selectLangInterval);_context.next=12;return Plugins.Storage.set({key:\"lang\",value:selectedLang});case 12:return _context.abrupt(\"return\",document.location.href=\"index.html\");case 13:case\"end\":return _context.stop();}}},_callee);})),100);return _context2.abrupt(\"return\",true);case 17:case\"end\":return _context2.stop();}}},_callee2,this);}));return _openSettingsModal.apply(this,arguments);}","map":{"version":3,"sources":["/Users/jan/Documents/filen/app/src/components/settings.js"],"names":["language","loadingController","modalController","popoverController","alertController","actionSheetController","Ionicons","Capacitor","Plugins","utils","require","openSettingsModal","appLang","state","lang","appDarkMode","darkMode","appSettings","settings","appState","Device","getInfo","deviceInfo","modalId","generateRandomClassName","customElements","define","innerHTML","arrowBack","get","userEmail","userStorageUsageMenuText","userMaxStorage","checkbox","onlyWifi","getLanguageSelection","appVersion","HTMLElement","create","component","swipeToClose","showBackdrop","backdropDismiss","cssClass","modal","present","clearInterval","window","customVariables","selectLangInterval","setInterval","document","getElementById","value","selectedLang","isAvailable","Storage","set","key","location","href"],"mappings":"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","sourcesContent":["import * as language from \"../utils/language\"\r\nimport { loadingController, modalController, popoverController, alertController, actionSheetController } from \"@ionic/core\"\r\nimport * as Ionicons from 'ionicons/icons'\r\nimport { Capacitor, Plugins } from \"@capacitor/core\"\r\n\r\nconst utils = require(\"../utils/utils\")\r\n\r\nexport async function openSettingsModal(){\r\n    let appLang = this.state.lang\r\n    let appDarkMode = this.state.darkMode\r\n    let appSettings = this.state.settings\r\n    let appState = this.state\r\n    let deviceInfo = await Plugins.Device.getInfo()\r\n    let modalId = \"settings-modal-\" + utils.generateRandomClassName()\r\n\r\n    customElements.define(modalId, class ModalContent extends HTMLElement {\r\n        connectedCallback() {\r\n            this.innerHTML = `\r\n                <ion-header>\r\n                    <ion-toolbar>\r\n                        <ion-buttons slot=\"start\">\r\n                            <ion-button onclick=\"window.customFunctions.dismissModal()\">\r\n                                <ion-icon slot=\"icon-only\" icon=\"` + Ionicons.arrowBack + `\"></ion-icon>\r\n                            </ion-button>\r\n                        </ion-buttons>\r\n                        <ion-title>\r\n                            ` + language.get(appLang, \"settingsHeader\") + `\r\n                        </ion-title>\r\n                    </ion-toolbar>\r\n                </ion-header>\r\n                <ion-content style=\"--background: ` + (appDarkMode ? \"#1E1E1E\" : \"white\") + `\" fullscreen>\r\n                    <ion-list>\r\n                        <ion-item-divider style=\"--background: ` + (appDarkMode ? \"#1E1E1E\" : \"white\") + `\">\r\n                            <ion-label>\r\n                                ` + language.get(appLang, \"settingsAccountHeader\") + `\r\n                            </ion-label>\r\n                        </ion-item-divider>\r\n                        <ion-item lines=\"none\">\r\n                            <ion-label>\r\n                                ` + appState.userEmail + `\r\n                            </ion-label>\r\n                            <ion-buttons slot=\"end\">\r\n                                <ion-button color=\"` + (appDarkMode ? `dark` : `light`) + `\" fill=\"solid\" onClick=\"window.open('https://filen.io/my-account/file-manager/settings', '_system'); return false;\">\r\n                                    ` + language.get(appLang, \"accountSettings\") + `\r\n                                </ion-button>\r\n                            </ion-buttons>\r\n                        </ion-item>\r\n                        <ion-item lines=\"none\">\r\n                            <ion-label>\r\n                                ` + language.get(appLang, \"settingsAccountUsage\") + `\r\n                            </ion-label>\r\n                            <ion-buttons slot=\"end\">\r\n                                <ion-button fill=\"none\">\r\n                                    ` + appState.userStorageUsageMenuText + `\r\n                                </ion-button>\r\n                            </ion-buttons>\r\n                        </ion-item>\r\n                        <ion-item lines=\"none\">\r\n                            <ion-label>\r\n                                ` + language.get(appLang, \"settingsAccountPro\") + `\r\n                            </ion-label>\r\n                            <ion-buttons slot=\"end\">\r\n                                ` + (appState.userMaxStorage >= 107374182400 ? `\r\n                                    <ion-button fill=\"none\">\r\n                                        <ion-icon slot=\"icon-only\" icon=\"` + Ionicons.checkbox + `\"></ion-icon>\r\n                                    </ion-button>\r\n                                ` : `\r\n                                    <ion-button fill=\"solid\" color=\"` + (appDarkMode ? `dark` : `light`) + `\" onClick=\"window.open('https://filen.io/pro', '_system'); return false;\">\r\n                                        ` + language.get(appLang, \"settingsAccountGoPro\") + `\r\n                                    </ion-button>\r\n                                `) + `\r\n                            </ion-buttons>\r\n                        </ion-item>\r\n                        <ion-item-divider style=\"--background: ` + (appDarkMode ? \"#1E1E1E\" : \"white\") + `\">\r\n                            <ion-label>\r\n                                ` + language.get(appLang, \"settingsGeneralHeader\") + `\r\n                            </ion-label>\r\n                        </ion-item-divider>\r\n                        <ion-item lines=\"none\">\r\n                            <ion-label>\r\n                                ` + language.get(appLang, \"darkMode\") + `\r\n                            </ion-label>\r\n                            <ion-toggle slot=\"end\" id=\"settings-dark-mode-toggle\" onClick=\"window.customFunctions.settingsToggleDarkMode()\" ` + (appDarkMode && \"checked\") + `></ion-toggle>\r\n                        </ion-item>\r\n                        <ion-item lines=\"none\">\r\n                            <ion-label>\r\n                                ` + language.get(appLang, \"onlyUseWifiForDownloads\") + `\r\n                            </ion-label>\r\n                            <ion-toggle slot=\"end\" id=\"settings-only-wifi-toggle\" onClick=\"window.customFunctions.toggleOnlyWifi()\" ` + (appSettings.onlyWifi && \"checked\") + `></ion-toggle>\r\n                        </ion-item>\r\n                        <ion-item lines=\"none\">\r\n                            <ion-label>` + language.get(appLang, \"settingsLanguage\") + `</ion-label>\r\n                            <ion-select id=\"settings-lang-select\" value=\"` + appLang + `\" cancel-text=\"` + language.get(appLang, \"cancel\") + `\" ok-text=\"` + language.get(appLang, \"alertOkButton\") + `\" interface=\"alert\">\r\n                                ` + utils.getLanguageSelection() + `\r\n                            </ion-select>\r\n                        </ion-item>\r\n                        <ion-item-divider style=\"--background: ` + (appDarkMode ? \"#1E1E1E\" : \"white\") + `\">\r\n                            <ion-label>\r\n                                ` + language.get(appLang, \"settingsAppHeader\") + `\r\n                            </ion-label>\r\n                        </ion-item-divider>\r\n                        <ion-item lines=\"none\">\r\n                            <a onClick=\"window.customFunctions.doLogout()\">` + language.get(appLang, \"settingsLogoutBtn\", true, [\"__EMAIL__\"], [appState.userEmail]) + `</a>\r\n                        </ion-item>\r\n                        <ion-item lines=\"none\">\r\n                            <ion-label>\r\n                                ` + language.get(appLang, \"settingsVersion\") + `\r\n                            </ion-label>\r\n                            <ion-buttons slot=\"end\">\r\n                                <ion-button fill=\"none\">\r\n                                    ` + deviceInfo.appVersion + `\r\n                                </ion-button>\r\n                            </ion-buttons>\r\n                        </ion-item>\r\n                        <ion-item lines=\"none\">\r\n                            <ion-label>\r\n                                ` + language.get(appLang, \"settingsClearThumbnailCache\") + `\r\n                            </ion-label>\r\n                            <ion-buttons slot=\"end\">\r\n                                <ion-button fill=\"solid\" color=\"` + (appDarkMode ? `dark` : `light`) + `\" onClick=\"window.customFunctions.clearThumbnailCache()\">\r\n                                    ` + language.get(appLang, \"settingsClearThumbnailCacheBtn\") + `\r\n                                </ion-button>\r\n                            </ion-buttons>\r\n                        </ion-item>\r\n                    </ion-list>\r\n                </ion-content>\r\n            `\r\n        }\r\n    })\r\n\r\n    let modal = await modalController.create({\r\n        component: modalId,\r\n        swipeToClose: false,\r\n        showBackdrop: false,\r\n        backdropDismiss: false,\r\n        cssClass: \"modal-fullscreen\"\r\n    })\r\n\r\n    await modal.present()\r\n\r\n    clearInterval(window.customVariables.selectLangInterval)\r\n\r\n    window.customVariables.selectLangInterval = setInterval(async () => {\r\n        if(typeof document.getElementById(\"settings-lang-select\") == \"undefined\"){\r\n            return clearInterval(window.customVariables.selectLangInterval)\r\n        }\r\n\r\n        if(document.getElementById(\"settings-lang-select\") == null){\r\n            return clearInterval(window.customVariables.selectLangInterval)\r\n        }\r\n\r\n        if(typeof document.getElementById(\"settings-lang-select\").value == \"undefined\"){\r\n            return clearInterval(window.customVariables.selectLangInterval)\r\n        }\r\n\r\n        let selectedLang = document.getElementById(\"settings-lang-select\").value\r\n\r\n        if(selectedLang !== appLang){\r\n            if(language.isAvailable(selectedLang)){\r\n                clearInterval(window.customVariables.selectLangInterval)\r\n\r\n                await Plugins.Storage.set({ key: \"lang\", value: selectedLang })\r\n\r\n                return document.location.href = \"index.html\"\r\n            }\r\n        }\r\n    }, 100)\r\n\r\n    return true\r\n}"]},"metadata":{},"sourceType":"module"}