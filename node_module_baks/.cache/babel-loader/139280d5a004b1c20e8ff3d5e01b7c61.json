{"ast":null,"code":"const utils = require(\"../utils/utils\");\n\nconst socketIO = require(\"socket.io-client\");\n\nexport function initSocket() {\n  if (!this.state.isLoggedIn) {\n    return false;\n  }\n\n  if (typeof window.customVariables.socket !== \"undefined\") {\n    return false;\n  }\n\n  window.customVariables.socket = socketIO(\"https://socket.filen.io\", {\n    path: \"\",\n    reconnect: true,\n    transports: [\"websocket\"]\n  });\n  console.log(window.customVariables.socket);\n  window.customVariables.socket.on(\"connect_error\", err => {\n    console.log(`connect_error due to ${err.message}`);\n  });\n  window.customVariables.socket.on(\"connect\", () => {\n    this.setState({\n      socketConnected: true\n    });\n    window.customVariables.socket.emit(\"auth\", {\n      apiKey: this.state.userAPIKey || \"\"\n    });\n    clearInterval(window.customVariables.socketPingInterval);\n    window.customVariables.socketPingInterval = setInterval(() => {\n      window.customVariables.socket.emit(\"heartbeat\");\n    }, 5000);\n    console.log(\"Connected to socket server\");\n  });\n  window.customVariables.socket.on(\"disconnect\", err => {\n    console.log(err);\n    this.setState({\n      socketConnected: false\n    });\n    console.log(\"Disconnected from socket server\");\n  });\n  window.customVariables.socket.on(\"new-event\", data => {\n    console.log(data);\n  });\n}\nexport function sendSocket(message, data) {\n  if (!this.state.isLoggedIn) {\n    return false;\n  }\n\n  if (typeof window.customVariables.socket == \"undefined\") {\n    return false;\n  }\n\n  window.customVariables.socket.emit(message, data);\n  return true;\n}","map":{"version":3,"sources":["/Users/jan/Documents/filen/app/src/components/socket.js"],"names":["utils","require","socketIO","initSocket","state","isLoggedIn","window","customVariables","socket","path","reconnect","transports","console","log","on","err","message","setState","socketConnected","emit","apiKey","userAPIKey","clearInterval","socketPingInterval","setInterval","data","sendSocket"],"mappings":"AAAA,MAAMA,KAAK,GAAGC,OAAO,CAAC,gBAAD,CAArB;;AACA,MAAMC,QAAQ,GAAGD,OAAO,CAAC,kBAAD,CAAxB;;AAEA,OAAO,SAASE,UAAT,GAAqB;AACxB,MAAG,CAAC,KAAKC,KAAL,CAAWC,UAAf,EAA0B;AACtB,WAAO,KAAP;AACH;;AAED,MAAG,OAAOC,MAAM,CAACC,eAAP,CAAuBC,MAA9B,KAAyC,WAA5C,EAAwD;AACpD,WAAO,KAAP;AACH;;AAEDF,EAAAA,MAAM,CAACC,eAAP,CAAuBC,MAAvB,GAAgCN,QAAQ,CAAC,yBAAD,EAA4B;AACtEO,IAAAA,IAAI,EAAE,EADgE;AAEtEC,IAAAA,SAAS,EAAE,IAF2D;AAGtEC,IAAAA,UAAU,EAAE,CACX,WADW;AAH0D,GAA5B,CAAxC;AAQAC,EAAAA,OAAO,CAACC,GAAR,CAAYP,MAAM,CAACC,eAAP,CAAuBC,MAAnC;AAEAF,EAAAA,MAAM,CAACC,eAAP,CAAuBC,MAAvB,CAA8BM,EAA9B,CAAiC,eAAjC,EAAmDC,GAAD,IAAS;AACvDH,IAAAA,OAAO,CAACC,GAAR,CAAa,wBAAuBE,GAAG,CAACC,OAAQ,EAAhD;AACD,GAFH;AAIAV,EAAAA,MAAM,CAACC,eAAP,CAAuBC,MAAvB,CAA8BM,EAA9B,CAAiC,SAAjC,EAA4C,MAAM;AAC9C,SAAKG,QAAL,CAAc;AACVC,MAAAA,eAAe,EAAE;AADP,KAAd;AAIAZ,IAAAA,MAAM,CAACC,eAAP,CAAuBC,MAAvB,CAA8BW,IAA9B,CAAmC,MAAnC,EAA2C;AAChDC,MAAAA,MAAM,EAAE,KAAKhB,KAAL,CAAWiB,UAAX,IAAyB;AADe,KAA3C;AAIAC,IAAAA,aAAa,CAAChB,MAAM,CAACC,eAAP,CAAuBgB,kBAAxB,CAAb;AAEAjB,IAAAA,MAAM,CAACC,eAAP,CAAuBgB,kBAAvB,GAA4CC,WAAW,CAAC,MAAM;AAC1DlB,MAAAA,MAAM,CAACC,eAAP,CAAuBC,MAAvB,CAA8BW,IAA9B,CAAmC,WAAnC;AACH,KAFsD,EAEpD,IAFoD,CAAvD;AAIAP,IAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACH,GAhBD;AAkBAP,EAAAA,MAAM,CAACC,eAAP,CAAuBC,MAAvB,CAA8BM,EAA9B,CAAiC,YAAjC,EAAgDC,GAAD,IAAS;AACpDH,IAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AAEA,SAAKE,QAAL,CAAc;AACVC,MAAAA,eAAe,EAAE;AADP,KAAd;AAIAN,IAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ;AACH,GARD;AAUAP,EAAAA,MAAM,CAACC,eAAP,CAAuBC,MAAvB,CAA8BM,EAA9B,CAAiC,WAAjC,EAA+CW,IAAD,IAAU;AACpDb,IAAAA,OAAO,CAACC,GAAR,CAAYY,IAAZ;AACH,GAFD;AAGH;AAED,OAAO,SAASC,UAAT,CAAoBV,OAApB,EAA6BS,IAA7B,EAAkC;AACrC,MAAG,CAAC,KAAKrB,KAAL,CAAWC,UAAf,EAA0B;AACtB,WAAO,KAAP;AACH;;AAED,MAAG,OAAOC,MAAM,CAACC,eAAP,CAAuBC,MAA9B,IAAwC,WAA3C,EAAuD;AACnD,WAAO,KAAP;AACH;;AAEDF,EAAAA,MAAM,CAACC,eAAP,CAAuBC,MAAvB,CAA8BW,IAA9B,CAAmCH,OAAnC,EAA4CS,IAA5C;AAEA,SAAO,IAAP;AACH","sourcesContent":["const utils = require(\"../utils/utils\")\nconst socketIO = require(\"socket.io-client\")\n\nexport function initSocket(){\n    if(!this.state.isLoggedIn){\n        return false\n    }\n\n    if(typeof window.customVariables.socket !== \"undefined\"){\n        return false\n    }\n\n    window.customVariables.socket = socketIO(\"https://socket.filen.io\", {\n\t\tpath: \"\",\n\t\treconnect: true,\n\t\ttransports: [\n\t\t\t\"websocket\"\n\t\t]\n\t})\n\n    console.log(window.customVariables.socket)\n\n    window.customVariables.socket.on(\"connect_error\", (err) => {\n        console.log(`connect_error due to ${err.message}`);\n      })\n\n    window.customVariables.socket.on(\"connect\", () => {\n        this.setState({\n            socketConnected: true\n        })\n\n        window.customVariables.socket.emit(\"auth\", {\n\t\t\tapiKey: this.state.userAPIKey || \"\"\n\t\t})\n\n        clearInterval(window.customVariables.socketPingInterval)\n\n        window.customVariables.socketPingInterval = setInterval(() => {\n            window.customVariables.socket.emit(\"heartbeat\")\n        }, 5000)\n\n        console.log(\"Connected to socket server\")\n    })\n\n    window.customVariables.socket.on(\"disconnect\", (err) => {\n        console.log(err)\n\n        this.setState({\n            socketConnected: false\n        })\n\n        console.log(\"Disconnected from socket server\")\n    })\n\n    window.customVariables.socket.on(\"new-event\", (data) => {\n        console.log(data)\n    })\n}\n\nexport function sendSocket(message, data){\n    if(!this.state.isLoggedIn){\n        return false\n    }\n\n    if(typeof window.customVariables.socket == \"undefined\"){\n        return false\n    }\n\n    window.customVariables.socket.emit(message, data)\n\n    return true\n}"]},"metadata":{},"sourceType":"module"}