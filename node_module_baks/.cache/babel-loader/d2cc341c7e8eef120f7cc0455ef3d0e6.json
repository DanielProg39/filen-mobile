{"ast":null,"code":"import * as language from \"../utils/language\";\nimport { toastController, actionSheetController, popoverController, alertController, loadingController } from \"@ionic/core\";\nimport * as Ionicons from 'ionicons/icons';\nimport { Capacitor, Plugins, CameraResultType, CameraSource, CameraDirection } from \"@capacitor/core\";\nimport * as workers from \"../utils/workers\";\n\nconst utils = require(\"../utils/utils\");\n\nexport async function spawnToast(message, duration = 3000) {\n  if (Capacitor.isNative) {\n    if (Math.floor(+new Date() / 1000) >= window.customVariables.nextNativeToastAllowed) {\n      window.customVariables.nextNativeToastAllowed = Math.floor(+new Date() / 1000) + 2;\n\n      try {\n        await Plugins.Toast.show({\n          text: message,\n          duration: \"short\",\n          position: \"bottom\"\n        });\n      } catch (e) {\n        return console.log(e);\n      }\n    } else {\n      return false;\n    }\n  } else {\n    let toast = await toastController.create({\n      message,\n      duration\n    });\n    return toast.present();\n  }\n}\nexport async function spawnMoveToast(callback) {\n  let toast = await toastController.create({\n    message: language.get(this.state.lang, \"selectDestination\"),\n    animated: false,\n    buttons: [{\n      text: language.get(this.state.lang, \"cancel\"),\n      role: \"cancel\",\n      handler: () => {\n        return callback(true);\n      }\n    }, {\n      text: language.get(this.state.lang, \"moveItem\"),\n      handler: () => {\n        return callback(false, utils.currentParentFolder());\n      }\n    }]\n  });\n  return toast.present();\n}\nexport async function spawnRenamePrompt(item, callback) {\n  let name = item.name;\n\n  if (name.indexOf(\".\") !== -1) {\n    let nameEx = name.split(\".\");\n    nameEx.pop();\n    name = nameEx.join(\".\");\n  }\n\n  let alert = await alertController.create({\n    header: item.type == \"file\" ? language.get(this.state.lang, \"renameFile\") : language.get(this.state.lang, \"renameFolder\"),\n    inputs: [{\n      type: \"text\",\n      id: \"rename-item-input\",\n      name: \"rename-item-input\",\n      value: name\n    }],\n    buttons: [{\n      text: language.get(this.state.lang, \"cancel\"),\n      role: \"cancel\",\n      handler: () => {\n        return callback(true);\n      }\n    }, {\n      text: language.get(this.state.lang, \"alertOkButton\"),\n      handler: inputs => {\n        return callback(false, inputs['rename-item-input']);\n      }\n    }]\n  });\n  await alert.present();\n  setTimeout(() => {\n    try {\n      document.querySelector(\"ion-alert input\").focus();\n    } catch (e) {}\n  }, 500);\n  return true;\n}\nexport async function mainFabAction() {\n  let actionSheet = await actionSheetController.create({\n    buttons: [{\n      text: language.get(this.state.lang, \"fabCreateFolder\"),\n      icon: Ionicons.folderOpen,\n      handler: async () => {\n        let alert = await alertController.create({\n          header: language.get(this.state.lang, \"newFolderName\"),\n          inputs: [{\n            type: \"text\",\n            id: \"new-folder-name-input\",\n            name: \"new-folder-name-input\",\n            placeholder: language.get(this.state.lang, \"newFolderNamePlaceholder\")\n          }],\n          buttons: [{\n            text: language.get(this.state.lang, \"cancel\"),\n            role: \"cancel\",\n            handler: () => {\n              return false;\n            }\n          }, {\n            text: language.get(this.state.lang, \"alertOkButton\"),\n            handler: async inputs => {\n              let name = inputs['new-folder-name-input'];\n              name = utils.removeIllegalCharsFromString(name);\n\n              if (utils.checkIfNameIsBanned(name) || utils.folderNameRegex(name) || utils.fileNameValidationRegex(name)) {\n                return this.spawnToast(language.get(this.state.lang, \"invalidFolderName\"));\n              }\n\n              if (!name || typeof name !== \"string\") {\n                return false;\n              }\n\n              if (name.length <= 0) {\n                return false;\n              }\n\n              let parent = utils.currentParentFolder();\n              let folderParent = null;\n              let folderUUID = utils.uuidv4();\n\n              if (parent !== \"base\") {\n                folderParent = parent;\n              }\n\n              let loading = await loadingController.create({\n                message: \"\"\n              });\n              loading.present();\n              this.dirExists(name, folderParent, async (err, exists, existsUUID) => {\n                if (err) {\n                  console.log(err);\n                  loading.dismiss();\n                  return this.spawnToast(language.get(this.state.lang, \"apiRequestError\"));\n                }\n\n                if (exists) {\n                  loading.dismiss();\n                  return this.spawnToast(language.get(this.state.lang, \"folderNameAlreadyExistsCreate\", true, [\"__NAME__\"], [name]));\n                }\n\n                try {\n                  if (parent == \"base\") {\n                    var res = await utils.apiRequest(\"POST\", \"/v1/dir/create\", {\n                      apiKey: this.state.userAPIKey,\n                      uuid: folderUUID,\n                      name: utils.cryptoJSEncrypt(JSON.stringify({\n                        name: name\n                      }), this.state.userMasterKeys[this.state.userMasterKeys.length - 1]),\n                      nameHashed: utils.hashFn(name.toLowerCase())\n                    });\n                  } else {\n                    var res = await utils.apiRequest(\"POST\", \"/v1/dir/sub/create\", {\n                      apiKey: this.state.userAPIKey,\n                      uuid: folderUUID,\n                      name: utils.cryptoJSEncrypt(JSON.stringify({\n                        name: name\n                      }), this.state.userMasterKeys[this.state.userMasterKeys.length - 1]),\n                      nameHashed: utils.hashFn(name.toLowerCase()),\n                      parent: folderParent\n                    });\n                  }\n                } catch (e) {\n                  console.log(e);\n                  loading.dismiss();\n                  return this.spawnToast(language.get(this.state.lang, \"apiRequestError\"));\n                }\n\n                if (!res.status) {\n                  console.log(res.message);\n                  loading.dismiss();\n                  return this.spawnToast(res.message);\n                }\n\n                loading.dismiss();\n                this.spawnToast(language.get(this.state.lang, \"folderCreated\", true, [\"__NAME__\"], [name]));\n                clearTimeout(window.customVariables.reloadAfterActionTimeout);\n                window.customVariables.reloadAfterActionTimeout = setTimeout(() => {\n                  this.updateItemList();\n                }, 500);\n              });\n            }\n          }]\n        });\n        await alert.present();\n        setTimeout(() => {\n          try {\n            document.querySelector(\"ion-alert input\").focus();\n          } catch (e) {}\n        }, 500);\n        return true;\n      }\n    }, {\n      text: language.get(this.state.lang, \"fabTakeImage\"),\n      icon: Ionicons.camera,\n      handler: async () => {\n        if (!Capacitor.isNative) {\n          return false;\n        }\n\n        if (utils.currentParentFolder() == \"base\") {\n          this.routeTo(\"/base/default\");\n        }\n\n        try {\n          var image = await Plugins.Camera.getPhoto({\n            quality: 100,\n            allowEditing: false,\n            resultType: CameraResultType.Base64,\n            saveToGallery: false,\n            source: CameraSource.Camera,\n            direction: CameraDirection.Rear,\n            presentationStyle: \"fullscreen\"\n          });\n        } catch (e) {\n          console.log(e);\n          return false;\n        }\n\n        workers.convertBase64ToArrayBuffer(image.base64String, arrayBuffer => {\n          let blob = new Blob([arrayBuffer], {\n            type: \"image/jpeg\"\n          });\n          blob.lastModifiedDate = new Date();\n          blob.name = language.get(this.state.lang, \"photo\") + \"_\" + new Date().toDateString().split(\" \").join(\"_\") + \"_\" + utils.unixTimestamp() + \".jpeg\";\n          return this.queueFileUpload(blob);\n        });\n      }\n    }, {\n      text: language.get(this.state.lang, \"fabUploadFiles\"),\n      icon: Ionicons.cloudUpload,\n      handler: async () => {\n        if (utils.currentParentFolder() == \"base\") {\n          this.routeTo(\"/base/default\");\n        }\n\n        return document.getElementById(\"file-input-dummy\").click();\n      }\n    }, {\n      text: language.get(this.state.lang, \"cancel\"),\n      icon: Ionicons.close,\n      handler: () => {\n        return actionSheet.dismiss();\n      }\n    }]\n  });\n  return actionSheet.present();\n}\nexport async function mainMenuPopover(event) {\n  event.persist();\n  let customElementId = utils.generateRandomClassName();\n  window.customElements.define(customElementId, class ModalContent extends HTMLElement {\n    connectedCallback() {\n      this.innerHTML = `\n                <ion-list>\n                    <ion-item lines=\"none\" detail=\"false\" button onClick=\"window.customFunctions.openOrderBy()\">` + language.get(window.customVariables.lang, \"orderBy\") + `</ion-item>\n                    <ion-item lines=\"none\" detail=\"false\" button onClick=\"window.customFunctions.selectAllItems()\">` + language.get(window.customVariables.lang, \"selectAll\") + `</ion-item>\n                    <ion-item lines=\"none\" detail=\"false\" button onClick=\"window.customFunctions.refreshItemList()\">` + language.get(window.customVariables.lang, \"refresh\") + `</ion-item>\n                    <ion-item lines=\"none\" detail=\"false\" button onClick=\"window.customFunctions.dismissPopover()\">` + language.get(window.customVariables.lang, \"close\") + `</ion-item>\n                </ion-list>\n            `;\n    }\n\n  });\n  let popover = await popoverController.create({\n    component: customElementId,\n    event: event\n  });\n  return popover.present();\n}","map":{"version":3,"sources":["/Users/jan/Documents/filen/app/src/components/spawn.js"],"names":["language","toastController","actionSheetController","popoverController","alertController","loadingController","Ionicons","Capacitor","Plugins","CameraResultType","CameraSource","CameraDirection","workers","utils","require","spawnToast","message","duration","isNative","Math","floor","Date","window","customVariables","nextNativeToastAllowed","Toast","show","text","position","e","console","log","toast","create","present","spawnMoveToast","callback","get","state","lang","animated","buttons","role","handler","currentParentFolder","spawnRenamePrompt","item","name","indexOf","nameEx","split","pop","join","alert","header","type","inputs","id","value","setTimeout","document","querySelector","focus","mainFabAction","actionSheet","icon","folderOpen","placeholder","removeIllegalCharsFromString","checkIfNameIsBanned","folderNameRegex","fileNameValidationRegex","length","parent","folderParent","folderUUID","uuidv4","loading","dirExists","err","exists","existsUUID","dismiss","res","apiRequest","apiKey","userAPIKey","uuid","cryptoJSEncrypt","JSON","stringify","userMasterKeys","nameHashed","hashFn","toLowerCase","status","clearTimeout","reloadAfterActionTimeout","updateItemList","camera","routeTo","image","Camera","getPhoto","quality","allowEditing","resultType","Base64","saveToGallery","source","direction","Rear","presentationStyle","convertBase64ToArrayBuffer","base64String","arrayBuffer","blob","Blob","lastModifiedDate","toDateString","unixTimestamp","queueFileUpload","cloudUpload","getElementById","click","close","mainMenuPopover","event","persist","customElementId","generateRandomClassName","customElements","define","ModalContent","HTMLElement","connectedCallback","innerHTML","popover","component"],"mappings":"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","sourcesContent":["import * as language from \"../utils/language\"\r\nimport { toastController, actionSheetController, popoverController, alertController, loadingController } from \"@ionic/core\"\r\nimport * as Ionicons from 'ionicons/icons';\r\nimport { Capacitor, Plugins, CameraResultType, CameraSource, CameraDirection } from \"@capacitor/core\";\r\nimport * as workers from \"../utils/workers\"\r\n\r\nconst utils = require(\"../utils/utils\")\r\n\r\nexport async function spawnToast(message, duration = 3000){\r\n    if(Capacitor.isNative){\r\n        if(Math.floor((+new Date()) / 1000) >= window.customVariables.nextNativeToastAllowed){\r\n            window.customVariables.nextNativeToastAllowed = (Math.floor((+new Date()) / 1000) + 2)\r\n\r\n            try{\r\n                await Plugins.Toast.show({\r\n                    text: message,\r\n                    duration: \"short\",\r\n                    position: \"bottom\"\r\n                })\r\n            }\r\n            catch(e){\r\n                return console.log(e)\r\n            }\r\n        }\r\n        else{\r\n            return false\r\n        }\r\n    }\r\n    else{\r\n        let toast = await toastController.create({\r\n            message,\r\n            duration\r\n        })\r\n    \r\n        return toast.present()\r\n    }\r\n}\r\n\r\nexport async function spawnMoveToast(callback){\r\n    let toast = await toastController.create({\r\n        message: language.get(this.state.lang, \"selectDestination\"),\r\n        animated: false,\r\n        buttons: [\r\n            {\r\n                text: language.get(this.state.lang, \"cancel\"),\r\n                role: \"cancel\",\r\n                handler: () => {\r\n                    return callback(true)\r\n                }\r\n            },\r\n            {\r\n                text: language.get(this.state.lang, \"moveItem\"),\r\n                handler: () => {\r\n                    return callback(false, utils.currentParentFolder())\r\n                }\r\n            }\r\n        ]\r\n    })\r\n\r\n    return toast.present()\r\n}\r\n\r\nexport async function spawnRenamePrompt(item, callback){\r\n    let name = item.name\r\n\r\n    if(name.indexOf(\".\") !== -1){\r\n        let nameEx = name.split(\".\")\r\n\r\n        nameEx.pop()\r\n\r\n        name = nameEx.join(\".\")\r\n    }\r\n\r\n    let alert = await alertController.create({\r\n        header: item.type == \"file\" ? language.get(this.state.lang, \"renameFile\") : language.get(this.state.lang, \"renameFolder\"),\r\n        inputs: [\r\n            {\r\n                type: \"text\",\r\n                id: \"rename-item-input\",\r\n                name: \"rename-item-input\",\r\n                value: name\r\n            }\r\n        ],\r\n        buttons: [\r\n            {\r\n                text: language.get(this.state.lang, \"cancel\"),\r\n                role: \"cancel\",\r\n                handler: () => {\r\n                    return callback(true)\r\n                }\r\n            },\r\n            {\r\n                text: language.get(this.state.lang, \"alertOkButton\"),\r\n                handler: (inputs) => {\r\n                    return callback(false, inputs['rename-item-input'])\r\n                }\r\n            }\r\n        ]\r\n    })\r\n\r\n    await alert.present()\r\n\r\n    setTimeout(() => {\r\n        try{\r\n            document.querySelector(\"ion-alert input\").focus()\r\n        } catch(e){ }\r\n    }, 500)\r\n\r\n    return true\r\n}\r\n\r\nexport async function mainFabAction(){\r\n    let actionSheet = await actionSheetController.create({\r\n        buttons: [\r\n            {\r\n                text: language.get(this.state.lang, \"fabCreateFolder\"),\r\n                icon: Ionicons.folderOpen,\r\n                handler: async () => {\r\n                    let alert = await alertController.create({\r\n                        header: language.get(this.state.lang, \"newFolderName\"),\r\n                        inputs: [\r\n                            {\r\n                                type: \"text\",\r\n                                id: \"new-folder-name-input\",\r\n                                name: \"new-folder-name-input\",\r\n                                placeholder: language.get(this.state.lang, \"newFolderNamePlaceholder\")\r\n                            }\r\n                        ],\r\n                        buttons: [\r\n                            {\r\n                                text: language.get(this.state.lang, \"cancel\"),\r\n                                role: \"cancel\",\r\n                                handler: () => {\r\n                                    return false\r\n                                }\r\n                            },\r\n                            {\r\n                                text: language.get(this.state.lang, \"alertOkButton\"),\r\n                                handler: async (inputs) => {\r\n                                    let name = inputs['new-folder-name-input']\r\n\r\n                                    name = utils.removeIllegalCharsFromString(name)\r\n\r\n                                    if(utils.checkIfNameIsBanned(name) || utils.folderNameRegex(name) || utils.fileNameValidationRegex(name)){\r\n                                        return this.spawnToast(language.get(this.state.lang, \"invalidFolderName\"))\r\n                                    }\r\n\r\n                                    if(!name || typeof name !== \"string\"){\r\n                                        return false\r\n                                    }\r\n\r\n                                    if(name.length <= 0){\r\n                                        return false\r\n                                    }\r\n\r\n                                    let parent = utils.currentParentFolder()\r\n                                    let folderParent = null\r\n                                    let folderUUID = utils.uuidv4()\r\n\r\n                                    if(parent !== \"base\"){\r\n                                        folderParent = parent\r\n                                    }\r\n\r\n                                    let loading = await loadingController.create({\r\n                                        message: \"\"\r\n                                    })\r\n\r\n                                    loading.present()\r\n\r\n                                    this.dirExists(name, folderParent, async (err, exists, existsUUID) => {\r\n                                        if(err){\r\n                                            console.log(err)\r\n\r\n                                            loading.dismiss()\r\n                        \r\n                                            return this.spawnToast(language.get(this.state.lang, \"apiRequestError\"))\r\n                                        }\r\n                        \r\n                                        if(exists){\r\n                                            loading.dismiss()\r\n                        \r\n                                            return this.spawnToast(language.get(this.state.lang, \"folderNameAlreadyExistsCreate\", true, [\"__NAME__\"], [name]))\r\n                                        }\r\n\r\n                                        try{\r\n                                            if(parent == \"base\"){\r\n                                                var res = await utils.apiRequest(\"POST\", \"/v1/dir/create\", {\r\n                                                    apiKey: this.state.userAPIKey,\r\n                                                    uuid: folderUUID,\r\n                                                    name: utils.cryptoJSEncrypt(JSON.stringify({\r\n                                                        name: name\r\n                                                    }), this.state.userMasterKeys[this.state.userMasterKeys.length - 1]),\r\n                                                    nameHashed: utils.hashFn(name.toLowerCase())\r\n                                                })\r\n                                            }\r\n                                            else{\r\n                                                var res = await utils.apiRequest(\"POST\", \"/v1/dir/sub/create\", {\r\n                                                    apiKey: this.state.userAPIKey,\r\n                                                    uuid: folderUUID,\r\n                                                    name: utils.cryptoJSEncrypt(JSON.stringify({\r\n                                                        name: name\r\n                                                    }), this.state.userMasterKeys[this.state.userMasterKeys.length - 1]),\r\n                                                    nameHashed: utils.hashFn(name.toLowerCase()),\r\n                                                    parent: folderParent\r\n                                                })\r\n                                            }\r\n                                        }\r\n                                        catch(e){\r\n                                            console.log(e)\r\n\r\n                                            loading.dismiss()\r\n                        \r\n                                            return this.spawnToast(language.get(this.state.lang, \"apiRequestError\"))\r\n                                        }\r\n\r\n                                        if(!res.status){\r\n                                            console.log(res.message)\r\n\r\n                                            loading.dismiss()\r\n\r\n                                            return this.spawnToast(res.message)\r\n                                        }\r\n\r\n                                        loading.dismiss()\r\n\r\n                                        this.spawnToast(language.get(this.state.lang, \"folderCreated\", true, [\"__NAME__\"], [name]))\r\n\r\n                                        clearTimeout(window.customVariables.reloadAfterActionTimeout)\r\n\r\n                                        window.customVariables.reloadAfterActionTimeout = setTimeout(() => {\r\n                                            this.updateItemList()\r\n                                        }, 500)\r\n                                    })\r\n                                }\r\n                            }\r\n                        ]\r\n                    })\r\n                \r\n                    await alert.present()\r\n\r\n                    setTimeout(() => {\r\n                        try{\r\n                            document.querySelector(\"ion-alert input\").focus()\r\n                        } catch(e){ }\r\n                    }, 500)\r\n\r\n                    return true\r\n                }\r\n            },\r\n            {\r\n                text: language.get(this.state.lang, \"fabTakeImage\"),\r\n                icon: Ionicons.camera,\r\n                handler: async () => {\r\n                    if(!Capacitor.isNative){\r\n                        return false\r\n                    }\r\n\r\n                    if(utils.currentParentFolder() == \"base\"){\r\n                        this.routeTo(\"/base/default\")\r\n                    }\r\n\r\n                    try{\r\n                        var image = await Plugins.Camera.getPhoto({\r\n                            quality: 100,\r\n                            allowEditing: false,\r\n                            resultType: CameraResultType.Base64,\r\n                            saveToGallery: false,\r\n                            source: CameraSource.Camera,\r\n                            direction: CameraDirection.Rear,\r\n                            presentationStyle: \"fullscreen\"\r\n                        })\r\n                    }\r\n                    catch(e){\r\n                        console.log(e)\r\n\r\n                        return false\r\n                    }\r\n\r\n                    workers.convertBase64ToArrayBuffer(image.base64String, (arrayBuffer) => {\r\n                        let blob = new Blob([arrayBuffer], {\r\n                            type: \"image/jpeg\"\r\n                        })\r\n\r\n                        blob.lastModifiedDate = new Date()\r\n                        blob.name = language.get(this.state.lang, \"photo\") + \"_\" + new Date().toDateString().split(\" \").join(\"_\") + \"_\" + utils.unixTimestamp() + \".jpeg\"\r\n\r\n                        return this.queueFileUpload(blob)\r\n                    })\r\n                }\r\n            },\r\n            {\r\n                text: language.get(this.state.lang, \"fabUploadFiles\"),\r\n                icon: Ionicons.cloudUpload,\r\n                handler: async () => {\r\n                    if(utils.currentParentFolder() == \"base\"){\r\n                        this.routeTo(\"/base/default\")\r\n                    }\r\n\r\n                    return document.getElementById(\"file-input-dummy\").click()\r\n                }\r\n            },\r\n            {\r\n                text: language.get(this.state.lang, \"cancel\"),\r\n                icon: Ionicons.close,\r\n                handler: () => {\r\n                    return actionSheet.dismiss()\r\n                }\r\n            }\r\n        ]\r\n    })\r\n\r\n    return actionSheet.present()\r\n}\r\n\r\nexport async function mainMenuPopover(event){\r\n    event.persist()\r\n\r\n    let customElementId = utils.generateRandomClassName()\r\n\r\n    window.customElements.define(customElementId, class ModalContent extends HTMLElement {\r\n        connectedCallback(){\r\n            this.innerHTML = `\r\n                <ion-list>\r\n                    <ion-item lines=\"none\" detail=\"false\" button onClick=\"window.customFunctions.openOrderBy()\">` + language.get(window.customVariables.lang, \"orderBy\") + `</ion-item>\r\n                    <ion-item lines=\"none\" detail=\"false\" button onClick=\"window.customFunctions.selectAllItems()\">` + language.get(window.customVariables.lang, \"selectAll\") + `</ion-item>\r\n                    <ion-item lines=\"none\" detail=\"false\" button onClick=\"window.customFunctions.refreshItemList()\">` + language.get(window.customVariables.lang, \"refresh\") + `</ion-item>\r\n                    <ion-item lines=\"none\" detail=\"false\" button onClick=\"window.customFunctions.dismissPopover()\">` + language.get(window.customVariables.lang, \"close\") + `</ion-item>\r\n                </ion-list>\r\n            `\r\n        }\r\n    })\r\n\r\n    let popover = await popoverController.create({\r\n        component: customElementId,\r\n        event: event\r\n    })\r\n\r\n    return popover.present()\r\n}"]},"metadata":{},"sourceType":"module"}