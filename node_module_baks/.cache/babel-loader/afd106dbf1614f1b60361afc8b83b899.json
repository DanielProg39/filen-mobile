{"ast":null,"code":"import { Plugins, StatusBarStyle, Capacitor } from \"@capacitor/core\";\nimport { modalController, popoverController, actionSheetController, loadingController, alertController } from \"@ionic/core\";\nimport * as language from \"../utils/language\";\nexport function setupListeners() {\n  if (Capacitor.isNative) {\n    Plugins.App.addListener(\"backButton\", async e => {\n      let goBackHistory = true;\n\n      if (this.state.searchbarOpen) {\n        this.hideMainSearchbar(false);\n        goBackHistory = false;\n      }\n\n      let isModalActive = await modalController.getTop();\n\n      if (isModalActive && this.state.isLoggedIn) {\n        window.customFunctions.dismissModal();\n        goBackHistory = false;\n      }\n\n      let isPopoverActive = await popoverController.getTop();\n\n      if (isPopoverActive && this.state.isLoggedIn) {\n        window.customFunctions.dismissPopover();\n        goBackHistory = false;\n      }\n\n      let isActionSheetActive = await actionSheetController.getTop();\n\n      if (isActionSheetActive && this.state.isLoggedIn) {\n        window.customFunctions.dismissActionSheet();\n        goBackHistory = false;\n      }\n\n      let isLoadingActive = await loadingController.getTop();\n\n      if (isLoadingActive) {\n        goBackHistory = false;\n      }\n\n      if (this.state.selectedItems > 0 && this.state.isLoggedIn) {\n        this.clearSelectedItems();\n        goBackHistory = false;\n      }\n\n      let isAlertActive = await alertController.getTop();\n\n      if (isAlertActive && this.state.isLoggedIn) {\n        window.customFunctions.dismissAlert();\n        goBackHistory = false;\n      }\n\n      let origin = window.location.origin;\n\n      if (window.location.href == origin || window.location.href == origin + \"/\" || window.location.href == origin + \"/#\" || window.location.href == origin + \"/#!\" || window.location.href == origin + \"/#/\" || window.location.href == origin + \"/index.html\" || window.location.href == origin + \"/index.html#!/\" || window.location.href == origin + \"/index.html#!\" || window.location.href == origin + \"/index.html#\" || window.location.href == origin + \"/#!/base\" || window.location.href == origin + \"/index.html#!/base\" || window.location.href == origin + \"/#!/shared-in\" || window.location.href == origin + \"/index.html#!/shared-in\" || window.location.href == origin + \"/#!/shared-out\" || window.location.href == origin + \"/index.html#!/shared-out\" || window.location.href == origin + \"/#!/trash\" || window.location.href == origin + \"/index.html#!/trash\" || window.location.href == origin + \"/#!/links\" || window.location.href == origin + \"/index.html#!/links\") {\n        goBackHistory = false;\n      }\n\n      if (goBackHistory) {\n        window.history.back();\n      }\n    });\n  }\n}\nexport async function setupStatusbar(type = \"normal\") {\n  if (Capacitor.isNative) {\n    if (type == \"normal\") {\n      if (this.state.darkMode) {\n        Plugins.StatusBar.setBackgroundColor({\n          color: \"#1F1F1F\"\n        });\n        Plugins.StatusBar.setStyle({\n          style: StatusBarStyle.Dark\n        });\n\n        if (Capacitor.platform == \"android\") {\n          window.NavigationBar.backgroundColorByHexString(\"#1F1F1F\", false);\n        }\n      } else {\n        Plugins.StatusBar.setBackgroundColor({\n          color: \"#ffffff\"\n        });\n        Plugins.StatusBar.setStyle({\n          style: StatusBarStyle.Light\n        });\n\n        if (Capacitor.platform == \"android\") {\n          window.NavigationBar.backgroundColorByHexString(\"#ffffff\", true);\n        }\n      }\n    } else if (type == \"image/video\") {\n      Plugins.StatusBar.setBackgroundColor({\n        color: \"#000000\"\n      });\n      Plugins.StatusBar.setStyle({\n        style: StatusBarStyle.Dark\n      });\n\n      if (Capacitor.platform == \"android\") {\n        window.NavigationBar.backgroundColorByHexString(\"#000000\", false);\n      }\n    } else if (type == \"login/register\") {\n      if (this.state.darkMode) {\n        Plugins.StatusBar.setBackgroundColor({\n          color: \"#121212\"\n        });\n        Plugins.StatusBar.setStyle({\n          style: StatusBarStyle.Dark\n        });\n\n        if (Capacitor.platform == \"android\") {\n          window.NavigationBar.backgroundColorByHexString(\"#121212\", false);\n        }\n      } else {\n        Plugins.StatusBar.setBackgroundColor({\n          color: \"#ffffff\"\n        });\n        Plugins.StatusBar.setStyle({\n          style: StatusBarStyle.Light\n        });\n\n        if (Capacitor.platform == \"android\") {\n          window.NavigationBar.backgroundColorByHexString(\"#ffffff\", true);\n        }\n      }\n    }\n\n    Plugins.StatusBar.setOverlaysWebView({\n      overlay: false\n    });\n  }\n}\nexport async function doSetup() {\n  let getLang = await Plugins.Storage.get({\n    key: \"lang\"\n  });\n  let getDarkMode = await Plugins.Storage.get({\n    key: \"darkMode\"\n  });\n  let getIsLoggedIn = await Plugins.Storage.get({\n    key: \"isLoggedIn\"\n  });\n  let getUserAPIKey = await Plugins.Storage.get({\n    key: \"userAPIKey\"\n  });\n  let getUserEmail = await Plugins.Storage.get({\n    key: \"userEmail\"\n  });\n  let getUserMasterKeys = await Plugins.Storage.get({\n    key: \"userMasterKeys\"\n  });\n  let getUserPublicKey = await Plugins.Storage.get({\n    key: \"userPublicKey\"\n  });\n  let getUserPrivateKey = await Plugins.Storage.get({\n    key: \"userPrivateKey\"\n  });\n  let getOfflineSavedFiles = await Plugins.Storage.get({\n    key: \"offlineSavedFiles\"\n  });\n  let getAPICache = await Plugins.Storage.get({\n    key: \"apiCache\"\n  });\n  let getSettings = await Plugins.Storage.get({\n    key: \"settings\"\n  });\n  let getCachedFiles = await Plugins.Storage.get({\n    key: \"cachedFiles\"\n  });\n  let getCachedFolders = await Plugins.Storage.get({\n    key: \"cachedFolders\"\n  });\n  let getCachedMetadata = await Plugins.Storage.get({\n    key: \"cachedMetadata\"\n  });\n  let getThumbnailCache = await Plugins.Storage.get({\n    key: \"thumbnailCache\"\n  });\n  let getGetThumbnailErrors = await Plugins.Storage.get({\n    key: \"getThumbnailErrors\"\n  });\n\n  if (getLang.value) {\n    this.setState({\n      lang: getLang.value,\n      mainToolbarTitle: language.get(getLang.value, \"myCloud\")\n    });\n    window.customVariables.lang = getLang.value;\n  } else {\n    let deviceLang = await Plugins.Device.getLanguageCode();\n    let defaultLang = \"en\";\n\n    if (language.isAvailable(deviceLang.value)) {\n      defaultLang = deviceLang.value;\n    }\n\n    this.setState({\n      lang: defaultLang,\n      mainToolbarTitle: language.get(defaultLang, \"myCloud\")\n    });\n    window.customVariables.lang = defaultLang;\n  }\n\n  if (getDarkMode.value == null) {\n    document.body.classList.toggle(\"dark\", true);\n    this.setState({\n      darkMode: true\n    });\n  } else {\n    if (getDarkMode.value == \"true\") {\n      document.body.classList.toggle(\"dark\", true);\n      this.setState({\n        darkMode: true\n      });\n    } else {\n      document.body.classList.toggle(\"dark\", false);\n      this.setState({\n        darkMode: false\n      });\n    }\n  }\n\n  this.setupStatusbar();\n\n  if (getIsLoggedIn.value == null) {\n    return this.showLogin();\n  } else {\n    if (getIsLoggedIn.value == \"true\") {\n      let settings = {\n        onlyWifi: false\n      };\n\n      if (typeof getSettings.value == \"string\") {\n        settings = JSON.parse(getSettings.value);\n      }\n\n      this.setState({\n        userAPIKey: getUserAPIKey.value,\n        userEmail: getUserEmail.value,\n        userMasterKeys: JSON.parse(getUserMasterKeys.value),\n        userPublicKey: getUserPublicKey.value,\n        userPrivateKey: getUserPrivateKey.value,\n        isLoggedIn: true,\n        settings: settings\n      });\n      window.customVariables.userMasterKeys = JSON.parse(getUserMasterKeys.value);\n\n      if (getOfflineSavedFiles.value == null) {\n        window.customVariables.offlineSavedFiles = {};\n      } else {\n        window.customVariables.offlineSavedFiles = JSON.parse(getOfflineSavedFiles.value);\n      }\n\n      if (getAPICache.value == null) {\n        window.customVariables.apiCache = {};\n      } else {\n        window.customVariables.apiCache = JSON.parse(getAPICache.value);\n      }\n\n      if (getCachedFiles.value == null) {\n        window.customVariables.cachedFiles = {};\n      } else {\n        window.customVariables.cachedFiles = JSON.parse(getCachedFiles.value);\n      }\n\n      if (getCachedFolders.value == null) {\n        window.customVariables.cachedFolders = {};\n      } else {\n        window.customVariables.cachedFolders = JSON.parse(getCachedFolders.value);\n      }\n\n      if (getCachedMetadata.value == null) {\n        window.customVariables.cachedMetadata = {};\n      } else {\n        window.customVariables.cachedMetadata = JSON.parse(getCachedMetadata.value);\n      }\n\n      if (getThumbnailCache.value == null) {\n        window.customVariables.thumbnailCache = {};\n      } else {\n        window.customVariables.thumbnailCache = JSON.parse(getThumbnailCache.value);\n      }\n\n      if (getGetThumbnailErrors.value == null) {\n        window.customVariables.getThumbnailErrors = {};\n      } else {\n        window.customVariables.getThumbnailErrors = JSON.parse(getGetThumbnailErrors.value);\n      }\n    } else {\n      return this.showLogin();\n    }\n  }\n\n  window.customVariables.apiKey = getUserAPIKey.value;\n  this.updateUserKeys();\n  this.updateUserUsage();\n  clearInterval(window.customVariables.keyUpdateInterval);\n  window.customVariables.keyUpdateInterval = setInterval(() => {\n    this.updateUserKeys();\n  }, 60000);\n  clearInterval(window.customVariables.usageUpdateInterval);\n  window.customVariables.usageUpdateInterval = setInterval(() => {\n    this.updateUserUsage();\n  }, 60000);\n  clearInterval(window.customVariables.getNetworkInfoInterval);\n  window.customVariables.getNetworkInfoInterval = setInterval(() => {\n    window.customFunctions.getNetworkInfo();\n  }, 60000);\n  return this.routeTo(\"/base\");\n}","map":{"version":3,"sources":["/Users/jan/Documents/filen/app/src/components/setup.js"],"names":["Plugins","StatusBarStyle","Capacitor","modalController","popoverController","actionSheetController","loadingController","alertController","language","setupListeners","isNative","App","addListener","e","goBackHistory","state","searchbarOpen","hideMainSearchbar","isModalActive","getTop","isLoggedIn","window","customFunctions","dismissModal","isPopoverActive","dismissPopover","isActionSheetActive","dismissActionSheet","isLoadingActive","selectedItems","clearSelectedItems","isAlertActive","dismissAlert","origin","location","href","history","back","setupStatusbar","type","darkMode","StatusBar","setBackgroundColor","color","setStyle","style","Dark","platform","NavigationBar","backgroundColorByHexString","Light","setOverlaysWebView","overlay","doSetup","getLang","Storage","get","key","getDarkMode","getIsLoggedIn","getUserAPIKey","getUserEmail","getUserMasterKeys","getUserPublicKey","getUserPrivateKey","getOfflineSavedFiles","getAPICache","getSettings","getCachedFiles","getCachedFolders","getCachedMetadata","getThumbnailCache","getGetThumbnailErrors","value","setState","lang","mainToolbarTitle","customVariables","deviceLang","Device","getLanguageCode","defaultLang","isAvailable","document","body","classList","toggle","showLogin","settings","onlyWifi","JSON","parse","userAPIKey","userEmail","userMasterKeys","userPublicKey","userPrivateKey","offlineSavedFiles","apiCache","cachedFiles","cachedFolders","cachedMetadata","thumbnailCache","getThumbnailErrors","apiKey","updateUserKeys","updateUserUsage","clearInterval","keyUpdateInterval","setInterval","usageUpdateInterval","getNetworkInfoInterval","getNetworkInfo","routeTo"],"mappings":"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","sourcesContent":["import { Plugins, StatusBarStyle, Capacitor } from \"@capacitor/core\"\r\nimport { modalController, popoverController, actionSheetController, loadingController, alertController } from \"@ionic/core\"\r\nimport * as language from \"../utils/language\"\r\n\r\nexport function setupListeners(){\r\n    if(Capacitor.isNative){\r\n        Plugins.App.addListener(\"backButton\", async (e) => {\r\n            let goBackHistory = true\r\n\r\n            if(this.state.searchbarOpen){\r\n                this.hideMainSearchbar(false)\r\n\r\n                goBackHistory = false\r\n            }\r\n\r\n            let isModalActive = await modalController.getTop()\r\n\r\n            if(isModalActive && this.state.isLoggedIn){\r\n                window.customFunctions.dismissModal()\r\n\r\n                goBackHistory = false\r\n            }\r\n\r\n            let isPopoverActive = await popoverController.getTop()\r\n\r\n            if(isPopoverActive && this.state.isLoggedIn){\r\n                window.customFunctions.dismissPopover()\r\n\r\n                goBackHistory = false\r\n            }\r\n\r\n            let isActionSheetActive = await actionSheetController.getTop()\r\n\r\n            if(isActionSheetActive && this.state.isLoggedIn){\r\n                window.customFunctions.dismissActionSheet()\r\n\r\n                goBackHistory = false\r\n            }\r\n\r\n            let isLoadingActive = await loadingController.getTop()\r\n\r\n            if(isLoadingActive){\r\n                goBackHistory = false\r\n            }\r\n\r\n            if(this.state.selectedItems > 0 && this.state.isLoggedIn){\r\n                this.clearSelectedItems()\r\n\r\n                goBackHistory = false\r\n            }\r\n\r\n            let isAlertActive = await alertController.getTop()\r\n\r\n            if(isAlertActive && this.state.isLoggedIn){\r\n                window.customFunctions.dismissAlert()\r\n\r\n                goBackHistory = false\r\n            }\r\n\r\n            let origin = window.location.origin\r\n\r\n            if(window.location.href == origin \r\n            || window.location.href == origin + \"/\" \r\n            || window.location.href == origin + \"/#\" \r\n            || window.location.href == origin + \"/#!\" \r\n            || window.location.href == origin + \"/#/\"\r\n            || window.location.href == origin + \"/index.html\"\r\n            || window.location.href == origin + \"/index.html#!/\"\r\n            || window.location.href == origin + \"/index.html#!\"\r\n            || window.location.href == origin + \"/index.html#\"\r\n            || window.location.href == origin + \"/#!/base\" \r\n            || window.location.href == origin + \"/index.html#!/base\"\r\n            || window.location.href == origin + \"/#!/shared-in\"\r\n            || window.location.href == origin + \"/index.html#!/shared-in\"\r\n            || window.location.href == origin + \"/#!/shared-out\"\r\n            || window.location.href == origin + \"/index.html#!/shared-out\"\r\n            || window.location.href == origin + \"/#!/trash\"\r\n            || window.location.href == origin + \"/index.html#!/trash\"\r\n            || window.location.href == origin + \"/#!/links\"\r\n            || window.location.href == origin + \"/index.html#!/links\"){\r\n                goBackHistory = false\r\n            }\r\n\r\n            if(goBackHistory){\r\n                window.history.back()\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport async function setupStatusbar(type = \"normal\"){\r\n    if(Capacitor.isNative){\r\n        if(type == \"normal\"){\r\n            if(this.state.darkMode){\r\n                Plugins.StatusBar.setBackgroundColor({\r\n                    color: \"#1F1F1F\"\r\n                })\r\n                \r\n                Plugins.StatusBar.setStyle({\r\n                    style: StatusBarStyle.Dark\r\n                })\r\n\r\n                if(Capacitor.platform == \"android\"){\r\n                    window.NavigationBar.backgroundColorByHexString(\"#1F1F1F\", false)\r\n                }\r\n            }\r\n            else{\r\n                Plugins.StatusBar.setBackgroundColor({\r\n                    color: \"#ffffff\"\r\n                })\r\n                \r\n                Plugins.StatusBar.setStyle({\r\n                    style: StatusBarStyle.Light\r\n                })\r\n\r\n                if(Capacitor.platform == \"android\"){\r\n                    window.NavigationBar.backgroundColorByHexString(\"#ffffff\", true)\r\n                }\r\n            }\r\n        }\r\n        else if(type == \"image/video\"){\r\n            Plugins.StatusBar.setBackgroundColor({\r\n                color: \"#000000\"\r\n            })\r\n            \r\n            Plugins.StatusBar.setStyle({\r\n                style: StatusBarStyle.Dark\r\n            })\r\n\r\n            if(Capacitor.platform == \"android\"){\r\n                window.NavigationBar.backgroundColorByHexString(\"#000000\", false)\r\n            }\r\n        }\r\n        else if(type == \"login/register\"){\r\n            if(this.state.darkMode){\r\n                Plugins.StatusBar.setBackgroundColor({\r\n                    color: \"#121212\"\r\n                })\r\n                \r\n                Plugins.StatusBar.setStyle({\r\n                    style: StatusBarStyle.Dark\r\n                })\r\n\r\n                if(Capacitor.platform == \"android\"){\r\n                    window.NavigationBar.backgroundColorByHexString(\"#121212\", false)\r\n                }\r\n            }\r\n            else{\r\n                Plugins.StatusBar.setBackgroundColor({\r\n                    color: \"#ffffff\"\r\n                })\r\n                \r\n                Plugins.StatusBar.setStyle({\r\n                    style: StatusBarStyle.Light\r\n                })\r\n\r\n                if(Capacitor.platform == \"android\"){\r\n                    window.NavigationBar.backgroundColorByHexString(\"#ffffff\", true)\r\n                }\r\n            }\r\n        }\r\n\r\n        Plugins.StatusBar.setOverlaysWebView({\r\n            overlay: false\r\n        })\r\n    }\r\n}\r\n\r\nexport async function doSetup(){\r\n    let getLang = await Plugins.Storage.get({ key: \"lang\" })\r\n    let getDarkMode = await Plugins.Storage.get({ key: \"darkMode\" })\r\n    let getIsLoggedIn = await Plugins.Storage.get({ key: \"isLoggedIn\" })\r\n    let getUserAPIKey = await Plugins.Storage.get({ key: \"userAPIKey\" })\r\n    let getUserEmail = await Plugins.Storage.get({ key: \"userEmail\" })\r\n    let getUserMasterKeys = await Plugins.Storage.get({ key: \"userMasterKeys\" })\r\n    let getUserPublicKey = await Plugins.Storage.get({ key: \"userPublicKey\" })\r\n    let getUserPrivateKey = await Plugins.Storage.get({ key: \"userPrivateKey\" })\r\n    let getOfflineSavedFiles = await Plugins.Storage.get({ key: \"offlineSavedFiles\" })\r\n    let getAPICache = await Plugins.Storage.get({ key: \"apiCache\" })\r\n    let getSettings = await Plugins.Storage.get({ key: \"settings\" })\r\n    let getCachedFiles = await Plugins.Storage.get({ key: \"cachedFiles\" })\r\n    let getCachedFolders = await Plugins.Storage.get({ key: \"cachedFolders\" })\r\n    let getCachedMetadata = await Plugins.Storage.get({ key: \"cachedMetadata\" })\r\n    let getThumbnailCache = await Plugins.Storage.get({ key: \"thumbnailCache\" })\r\n    let getGetThumbnailErrors = await Plugins.Storage.get({ key: \"getThumbnailErrors\" })\r\n\r\n    if(getLang.value){\r\n        this.setState({\r\n            lang: getLang.value,\r\n            mainToolbarTitle: language.get(getLang.value, \"myCloud\")\r\n        })\r\n\r\n        window.customVariables.lang = getLang.value\r\n    }\r\n    else{\r\n        let deviceLang = await Plugins.Device.getLanguageCode()\r\n        let defaultLang = \"en\"\r\n\r\n        if(language.isAvailable(deviceLang.value)){\r\n            defaultLang = deviceLang.value\r\n        }\r\n\r\n        this.setState({\r\n            lang: defaultLang,\r\n            mainToolbarTitle: language.get(defaultLang, \"myCloud\")\r\n        })\r\n\r\n        window.customVariables.lang = defaultLang\r\n    }\r\n\r\n    if(getDarkMode.value == null){\r\n        document.body.classList.toggle(\"dark\", true)\r\n\r\n        this.setState({\r\n            darkMode: true\r\n        })\r\n    }\r\n    else{\r\n        if(getDarkMode.value == \"true\"){\r\n            document.body.classList.toggle(\"dark\", true)\r\n\r\n            this.setState({\r\n                darkMode: true\r\n            })\r\n        }\r\n        else{\r\n            document.body.classList.toggle(\"dark\", false)\r\n\r\n            this.setState({\r\n                darkMode: false\r\n            })\r\n        }\r\n    }\r\n\r\n    this.setupStatusbar()\r\n\r\n    if(getIsLoggedIn.value == null){\r\n        return this.showLogin()\r\n    }\r\n    else{\r\n        if(getIsLoggedIn.value == \"true\"){\r\n            let settings = {\r\n                onlyWifi: false\r\n            }\r\n\r\n            if(typeof getSettings.value == \"string\"){\r\n                settings = JSON.parse(getSettings.value)\r\n            }\r\n\r\n            this.setState({\r\n                userAPIKey: getUserAPIKey.value,\r\n                userEmail: getUserEmail.value,\r\n                userMasterKeys: JSON.parse(getUserMasterKeys.value),\r\n                userPublicKey: getUserPublicKey.value,\r\n                userPrivateKey: getUserPrivateKey.value,\r\n                isLoggedIn: true,\r\n                settings: settings\r\n            })\r\n\r\n            window.customVariables.userMasterKeys = JSON.parse(getUserMasterKeys.value)\r\n\r\n            if(getOfflineSavedFiles.value == null){\r\n                window.customVariables.offlineSavedFiles = {}\r\n            }\r\n            else{\r\n                window.customVariables.offlineSavedFiles = JSON.parse(getOfflineSavedFiles.value)\r\n            }\r\n\r\n            if(getAPICache.value == null){\r\n                window.customVariables.apiCache = {}\r\n            }\r\n            else{\r\n                window.customVariables.apiCache = JSON.parse(getAPICache.value)\r\n            }\r\n\r\n            if(getCachedFiles.value == null){\r\n                window.customVariables.cachedFiles = {}\r\n            }\r\n            else{\r\n                window.customVariables.cachedFiles = JSON.parse(getCachedFiles.value)\r\n            }\r\n\r\n            if(getCachedFolders.value == null){\r\n                window.customVariables.cachedFolders = {}\r\n            }\r\n            else{\r\n                window.customVariables.cachedFolders = JSON.parse(getCachedFolders.value)\r\n            }\r\n\r\n            if(getCachedMetadata.value == null){\r\n                window.customVariables.cachedMetadata = {}\r\n            }\r\n            else{\r\n                window.customVariables.cachedMetadata = JSON.parse(getCachedMetadata.value)\r\n            }\r\n\r\n            if(getThumbnailCache.value == null){\r\n                window.customVariables.thumbnailCache = {}\r\n            }\r\n            else{\r\n                window.customVariables.thumbnailCache = JSON.parse(getThumbnailCache.value)\r\n            }\r\n\r\n            if(getGetThumbnailErrors.value == null){\r\n                window.customVariables.getThumbnailErrors = {}\r\n            }\r\n            else{\r\n                window.customVariables.getThumbnailErrors = JSON.parse(getGetThumbnailErrors.value)\r\n            }\r\n        }\r\n        else{\r\n            return this.showLogin()\r\n        }\r\n    }\r\n\r\n    window.customVariables.apiKey = getUserAPIKey.value\r\n\r\n    this.updateUserKeys()\r\n    this.updateUserUsage()\r\n\r\n    clearInterval(window.customVariables.keyUpdateInterval)\r\n\r\n    window.customVariables.keyUpdateInterval = setInterval(() => {\r\n        this.updateUserKeys()\r\n    }, 60000)\r\n\r\n    clearInterval(window.customVariables.usageUpdateInterval)\r\n\r\n    window.customVariables.usageUpdateInterval = setInterval(() => {\r\n        this.updateUserUsage()\r\n    }, 60000)\r\n\r\n    clearInterval(window.customVariables.getNetworkInfoInterval)\r\n\r\n    window.customVariables.getNetworkInfoInterval = setInterval(() => {\r\n        window.customFunctions.getNetworkInfo()\r\n    }, 60000)\r\n\r\n    return this.routeTo(\"/base\")\r\n}"]},"metadata":{},"sourceType":"module"}