{"ast":null,"code":"import { io } from \"socket.io-client\";\n\nconst utils = require(\"../utils/utils\");\n\nexport function initSocket() {\n  if (!this.state.isLoggedIn) {\n    return false;\n  }\n\n  if (typeof window.customVariables.socket !== \"undefined\") {\n    return false;\n  }\n\n  window.customVariables.socket = io(\"https://socket.filen.io\", {\n    path: \"\",\n    reconnect: true,\n    transports: [\"websocket\"]\n  });\n  window.customVariables.socket.on(\"connect\", () => {\n    this.setState({\n      socketConnected: true\n    });\n    window.customVariables.socket.emit(\"auth\", {\n      apiKey: this.state.userAPIKey || \"\"\n    });\n    clearInterval(window.customVariables.socketPingInterval);\n    window.customVariables.socketPingInterval = setInterval(() => {\n      window.customVariables.socket.emit(\"heartbeat\");\n    }, 5000);\n    console.log(\"Connected to socket\");\n  });\n  window.customVariables.socket.on(\"disconnect\", () => {\n    this.setState({\n      socketConnected: false\n    });\n    console.log(\"Disconnected from socket\");\n  });\n  window.customVariables.socket.on(\"message\", data => {\n    console.log(data);\n  });\n}\nexport function sendSocket(message, data) {\n  if (!this.state.isLoggedIn) {\n    return false;\n  }\n\n  if (typeof window.customVariables.socket == \"undefined\") {\n    return false;\n  }\n\n  window.customVariables.socket.emit(message, data);\n  return true;\n}","map":{"version":3,"sources":["/Users/jan/Documents/filen/app/src/components/socket.js"],"names":["io","utils","require","initSocket","state","isLoggedIn","window","customVariables","socket","path","reconnect","transports","on","setState","socketConnected","emit","apiKey","userAPIKey","clearInterval","socketPingInterval","setInterval","console","log","data","sendSocket","message"],"mappings":"AAAA,SAASA,EAAT,QAAmB,kBAAnB;;AAEA,MAAMC,KAAK,GAAGC,OAAO,CAAC,gBAAD,CAArB;;AAEA,OAAO,SAASC,UAAT,GAAqB;AACxB,MAAG,CAAC,KAAKC,KAAL,CAAWC,UAAf,EAA0B;AACtB,WAAO,KAAP;AACH;;AAED,MAAG,OAAOC,MAAM,CAACC,eAAP,CAAuBC,MAA9B,KAAyC,WAA5C,EAAwD;AACpD,WAAO,KAAP;AACH;;AAEDF,EAAAA,MAAM,CAACC,eAAP,CAAuBC,MAAvB,GAAgCR,EAAE,CAAC,yBAAD,EAA4B;AAChES,IAAAA,IAAI,EAAE,EAD0D;AAEhEC,IAAAA,SAAS,EAAE,IAFqD;AAGhEC,IAAAA,UAAU,EAAE,CACX,WADW;AAHoD,GAA5B,CAAlC;AAQAL,EAAAA,MAAM,CAACC,eAAP,CAAuBC,MAAvB,CAA8BI,EAA9B,CAAiC,SAAjC,EAA4C,MAAM;AAC9C,SAAKC,QAAL,CAAc;AACVC,MAAAA,eAAe,EAAE;AADP,KAAd;AAIAR,IAAAA,MAAM,CAACC,eAAP,CAAuBC,MAAvB,CAA8BO,IAA9B,CAAmC,MAAnC,EAA2C;AAChDC,MAAAA,MAAM,EAAE,KAAKZ,KAAL,CAAWa,UAAX,IAAyB;AADe,KAA3C;AAIAC,IAAAA,aAAa,CAACZ,MAAM,CAACC,eAAP,CAAuBY,kBAAxB,CAAb;AAEAb,IAAAA,MAAM,CAACC,eAAP,CAAuBY,kBAAvB,GAA4CC,WAAW,CAAC,MAAM;AAC1Dd,MAAAA,MAAM,CAACC,eAAP,CAAuBC,MAAvB,CAA8BO,IAA9B,CAAmC,WAAnC;AACH,KAFsD,EAEpD,IAFoD,CAAvD;AAIAM,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACH,GAhBD;AAkBAhB,EAAAA,MAAM,CAACC,eAAP,CAAuBC,MAAvB,CAA8BI,EAA9B,CAAiC,YAAjC,EAA+C,MAAM;AACjD,SAAKC,QAAL,CAAc;AACVC,MAAAA,eAAe,EAAE;AADP,KAAd;AAIAO,IAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACH,GAND;AAQAhB,EAAAA,MAAM,CAACC,eAAP,CAAuBC,MAAvB,CAA8BI,EAA9B,CAAiC,SAAjC,EAA6CW,IAAD,IAAU;AAClDF,IAAAA,OAAO,CAACC,GAAR,CAAYC,IAAZ;AACH,GAFD;AAGH;AAED,OAAO,SAASC,UAAT,CAAoBC,OAApB,EAA6BF,IAA7B,EAAkC;AACrC,MAAG,CAAC,KAAKnB,KAAL,CAAWC,UAAf,EAA0B;AACtB,WAAO,KAAP;AACH;;AAED,MAAG,OAAOC,MAAM,CAACC,eAAP,CAAuBC,MAA9B,IAAwC,WAA3C,EAAuD;AACnD,WAAO,KAAP;AACH;;AAEDF,EAAAA,MAAM,CAACC,eAAP,CAAuBC,MAAvB,CAA8BO,IAA9B,CAAmCU,OAAnC,EAA4CF,IAA5C;AAEA,SAAO,IAAP;AACH","sourcesContent":["import { io } from \"socket.io-client\"\n\nconst utils = require(\"../utils/utils\")\n\nexport function initSocket(){\n    if(!this.state.isLoggedIn){\n        return false\n    }\n\n    if(typeof window.customVariables.socket !== \"undefined\"){\n        return false\n    }\n\n    window.customVariables.socket = io(\"https://socket.filen.io\", {\n\t\tpath: \"\",\n\t\treconnect: true,\n\t\ttransports: [\n\t\t\t\"websocket\"\n\t\t]\n\t})\n\n    window.customVariables.socket.on(\"connect\", () => {\n        this.setState({\n            socketConnected: true\n        })\n\n        window.customVariables.socket.emit(\"auth\", {\n\t\t\tapiKey: this.state.userAPIKey || \"\"\n\t\t})\n\n        clearInterval(window.customVariables.socketPingInterval)\n\n        window.customVariables.socketPingInterval = setInterval(() => {\n            window.customVariables.socket.emit(\"heartbeat\")\n        }, 5000)\n\n        console.log(\"Connected to socket\")\n    })\n\n    window.customVariables.socket.on(\"disconnect\", () => {\n        this.setState({\n            socketConnected: false\n        })\n\n        console.log(\"Disconnected from socket\")\n    })\n\n    window.customVariables.socket.on(\"message\", (data) => {\n        console.log(data)\n    })\n}\n\nexport function sendSocket(message, data){\n    if(!this.state.isLoggedIn){\n        return false\n    }\n\n    if(typeof window.customVariables.socket == \"undefined\"){\n        return false\n    }\n\n    window.customVariables.socket.emit(message, data)\n\n    return true\n}"]},"metadata":{},"sourceType":"module"}