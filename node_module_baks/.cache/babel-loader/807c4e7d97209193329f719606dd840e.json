{"ast":null,"code":"import _regeneratorRuntime from\"/Users/jan/Documents/filen/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _classCallCheck from\"/Users/jan/Documents/filen/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/jan/Documents/filen/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/jan/Documents/filen/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/jan/Documents/filen/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import _wrapNativeSuper from\"/Users/jan/Documents/filen/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/wrapNativeSuper\";import _asyncToGenerator from\"/Users/jan/Documents/filen/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import*as language from\"../utils/language\";import{Plugins,Capacitor}from\"@capacitor/core\";import{modalController}from\"@ionic/core\";import*as Ionicons from'ionicons/icons';var utils=require(\"../utils/utils\");export function showLogin(){return _showLogin.apply(this,arguments);}function _showLogin(){_showLogin=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var _this=this;var appLang,appDarkMode,modalId,modal;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:appLang=this.state.lang;appDarkMode=this.state.darkMode;modalId=\"login-modal-\"+utils.generateRandomClassName();customElements.define(modalId,/*#__PURE__*/function(_HTMLElement){_inherits(ModalContent,_HTMLElement);var _super=_createSuper(ModalContent);function ModalContent(){_classCallCheck(this,ModalContent);return _super.apply(this,arguments);}_createClass(ModalContent,[{key:\"connectedCallback\",value:function connectedCallback(){this.innerHTML=\"\\n                <ion-header class=\\\"ion-header-no-shadow\\\" style=\\\"--background: transparent;\\\">\\n                    <ion-toolbar style=\\\"--background: transparent;\\\">\\n                        <ion-select slot=\\\"start\\\" id=\\\"settings-lang-select\\\" value=\\\"\"+appLang+\"\\\" cancel-text=\\\"\"+language.get(appLang,\"cancel\")+\"\\\" ok-text=\\\"\"+language.get(appLang,\"alertOkButton\")+\"\\\" interface=\\\"alert\\\">\\n                            \"+utils.getLanguageSelection()+\"\\n                        </ion-select>\\n                        <ion-buttons slot=\\\"end\\\">\\n                            <ion-button onClick=\\\"window.customFunctions.loginToggleDarkMode()\\\">\\n                                <ion-icon slot=\\\"icon-only\\\" icon=\\\"\"+(appDarkMode?Ionicons.sunny:Ionicons.moon)+\"\\\"></ion-icon>\\n                            </ion-button>\\n                        </ion-buttons>\\n                    </ion-toolbar>\\n                </ion-header>\\n                <ion-content fullscreen>\\n                    <div style=\\\"position: absolute; left: 50%; top: 50%; -webkit-transform: translate(-50%, -50%); transform: translate(-50%, -50%); width: 100%;\\\">\\n                        <center>\\n                            <ion-avatar>\\n                                <img src=\\\"assets/img/icon.png\\\">\\n                            </ion-avatar>\\n                            <ion-item style=\\\"width: 90%; margin-top: 30px;\\\">\\n                                <ion-input type=\\\"text\\\" id=\\\"login-email\\\" placeholder=\\\"\"+language.get(appLang,\"emailPlaceholder\")+\"\\\"></ion-input>\\n                            </ion-item>\\n                            <ion-item style=\\\"width: 90%;\\\">\\n                                <ion-input type=\\\"password\\\" id=\\\"login-password\\\" placeholder=\\\"\"+language.get(appLang,\"passwordPlaceholder\")+\"\\\"></ion-input>\\n                            </ion-item>\\n                            <ion-item style=\\\"width: 90%; display: none;\\\" id=\\\"login-2fa-container\\\">\\n                                <ion-input type=\\\"number\\\" id=\\\"login-2fa\\\" placeholder=\\\"\"+language.get(appLang,\"2faPlaceholder\")+\"\\\"></ion-input>\\n                            </ion-item>\\n                            <ion-button expand=\\\"block\\\" style=\\\"width: 90%; margin-top: 50px;\\\" onClick=\\\"window.customFunctions.doLogin()\\\">\"+language.get(appLang,\"loginButton\")+\"</ion-button>\\n                            <br>\\n                            \"+language.get(appLang,\"or\").toUpperCase()+\"\\n                            <br>\\n                            <br>\\n                            <a onClick=\\\"window.customFunctions.openRegisterModal()\\\">\"+language.get(appLang,\"registerLink\")+\"</a>\\n                        </center>\\n                    </div>\\n                </ion-content>\\n            \";}}]);return ModalContent;}(/*#__PURE__*/_wrapNativeSuper(HTMLElement)));_context2.next=6;return modalController.create({component:modalId,swipeToClose:false,showBackdrop:false,backdropDismiss:false,cssClass:\"modal-fullscreen\"});case 6:modal=_context2.sent;_context2.next=9;return modal.present();case 9:this.setupStatusbar(\"login/register\");modal.onDidDismiss().then(function(){_this.setupStatusbar();});if(Capacitor.isNative){Plugins.SplashScreen.hide();}clearInterval(window.customVariables.selectLangInterval);window.customVariables.selectLangInterval=setInterval(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var selectedLang;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(typeof document.getElementById(\"settings-lang-select\")==\"undefined\")){_context.next=2;break;}return _context.abrupt(\"return\",clearInterval(window.customVariables.selectLangInterval));case 2:if(!(document.getElementById(\"settings-lang-select\")==null)){_context.next=4;break;}return _context.abrupt(\"return\",clearInterval(window.customVariables.selectLangInterval));case 4:if(!(typeof document.getElementById(\"settings-lang-select\").value==\"undefined\")){_context.next=6;break;}return _context.abrupt(\"return\",clearInterval(window.customVariables.selectLangInterval));case 6:selectedLang=document.getElementById(\"settings-lang-select\").value;if(!(selectedLang!==appLang)){_context.next=13;break;}if(!language.isAvailable(selectedLang)){_context.next=13;break;}clearInterval(window.customVariables.selectLangInterval);_context.next=12;return Plugins.Storage.set({key:\"lang\",value:selectedLang});case 12:return _context.abrupt(\"return\",document.location.href=\"index.html\");case 13:case\"end\":return _context.stop();}}},_callee);})),100);case 14:case\"end\":return _context2.stop();}}},_callee2,this);}));return _showLogin.apply(this,arguments);}","map":{"version":3,"sources":["/Users/jan/Documents/filen/app/src/components/login.js"],"names":["language","Plugins","Capacitor","modalController","Ionicons","utils","require","showLogin","appLang","state","lang","appDarkMode","darkMode","modalId","generateRandomClassName","customElements","define","innerHTML","get","getLanguageSelection","sunny","moon","toUpperCase","HTMLElement","create","component","swipeToClose","showBackdrop","backdropDismiss","cssClass","modal","present","setupStatusbar","onDidDismiss","then","isNative","SplashScreen","hide","clearInterval","window","customVariables","selectLangInterval","setInterval","document","getElementById","value","selectedLang","isAvailable","Storage","set","key","location","href"],"mappings":"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","sourcesContent":["import * as language from \"../utils/language\"\r\nimport { Plugins, Capacitor } from \"@capacitor/core\"\r\nimport { modalController } from \"@ionic/core\"\r\nimport * as Ionicons from 'ionicons/icons'\r\n\r\nconst utils = require(\"../utils/utils\")\r\n\r\nexport async function showLogin(){\r\n    let appLang = this.state.lang\r\n    let appDarkMode = this.state.darkMode\r\n    let modalId = \"login-modal-\" + utils.generateRandomClassName()\r\n\r\n    customElements.define(modalId, class ModalContent extends HTMLElement {\r\n        connectedCallback(){\r\n            this.innerHTML = `\r\n                <ion-header class=\"ion-header-no-shadow\" style=\"--background: transparent;\">\r\n                    <ion-toolbar style=\"--background: transparent;\">\r\n                        <ion-select slot=\"start\" id=\"settings-lang-select\" value=\"` + appLang + `\" cancel-text=\"` + language.get(appLang, \"cancel\") + `\" ok-text=\"` + language.get(appLang, \"alertOkButton\") + `\" interface=\"alert\">\r\n                            ` + utils.getLanguageSelection() + `\r\n                        </ion-select>\r\n                        <ion-buttons slot=\"end\">\r\n                            <ion-button onClick=\"window.customFunctions.loginToggleDarkMode()\">\r\n                                <ion-icon slot=\"icon-only\" icon=\"` + (appDarkMode ? Ionicons.sunny : Ionicons.moon) + `\"></ion-icon>\r\n                            </ion-button>\r\n                        </ion-buttons>\r\n                    </ion-toolbar>\r\n                </ion-header>\r\n                <ion-content fullscreen>\r\n                    <div style=\"position: absolute; left: 50%; top: 50%; -webkit-transform: translate(-50%, -50%); transform: translate(-50%, -50%); width: 100%;\">\r\n                        <center>\r\n                            <ion-avatar>\r\n                                <img src=\"assets/img/icon.png\">\r\n                            </ion-avatar>\r\n                            <ion-item style=\"width: 90%; margin-top: 30px;\">\r\n                                <ion-input type=\"text\" id=\"login-email\" placeholder=\"` + language.get(appLang, \"emailPlaceholder\") + `\"></ion-input>\r\n                            </ion-item>\r\n                            <ion-item style=\"width: 90%;\">\r\n                                <ion-input type=\"password\" id=\"login-password\" placeholder=\"` + language.get(appLang, \"passwordPlaceholder\") + `\"></ion-input>\r\n                            </ion-item>\r\n                            <ion-item style=\"width: 90%; display: none;\" id=\"login-2fa-container\">\r\n                                <ion-input type=\"number\" id=\"login-2fa\" placeholder=\"` + language.get(appLang, \"2faPlaceholder\") + `\"></ion-input>\r\n                            </ion-item>\r\n                            <ion-button expand=\"block\" style=\"width: 90%; margin-top: 50px;\" onClick=\"window.customFunctions.doLogin()\">` + language.get(appLang, \"loginButton\") + `</ion-button>\r\n                            <br>\r\n                            ` + language.get(appLang, \"or\").toUpperCase() + `\r\n                            <br>\r\n                            <br>\r\n                            <a onClick=\"window.customFunctions.openRegisterModal()\">` + language.get(appLang, \"registerLink\") + `</a>\r\n                        </center>\r\n                    </div>\r\n                </ion-content>\r\n            `;\r\n        }\r\n    })\r\n\r\n    let modal = await modalController.create({\r\n        component: modalId,\r\n        swipeToClose: false,\r\n        showBackdrop: false,\r\n        backdropDismiss: false,\r\n        cssClass: \"modal-fullscreen\"\r\n    })\r\n\r\n    await modal.present()\r\n\r\n    this.setupStatusbar(\"login/register\")\r\n\r\n\tmodal.onDidDismiss().then(() => {\r\n        this.setupStatusbar()\r\n    })\r\n\r\n    if(Capacitor.isNative){\r\n        Plugins.SplashScreen.hide()\r\n    }\r\n\r\n    clearInterval(window.customVariables.selectLangInterval)\r\n\r\n    window.customVariables.selectLangInterval = setInterval(async () => {\r\n        if(typeof document.getElementById(\"settings-lang-select\") == \"undefined\"){\r\n            return clearInterval(window.customVariables.selectLangInterval)\r\n        }\r\n\r\n        if(document.getElementById(\"settings-lang-select\") == null){\r\n            return clearInterval(window.customVariables.selectLangInterval)\r\n        }\r\n\r\n        if(typeof document.getElementById(\"settings-lang-select\").value == \"undefined\"){\r\n            return clearInterval(window.customVariables.selectLangInterval)\r\n        }\r\n\r\n        let selectedLang = document.getElementById(\"settings-lang-select\").value\r\n\r\n        if(selectedLang !== appLang){\r\n            if(language.isAvailable(selectedLang)){\r\n                clearInterval(window.customVariables.selectLangInterval)\r\n\r\n                await Plugins.Storage.set({ key: \"lang\", value: selectedLang })\r\n\r\n                return document.location.href = \"index.html\"\r\n            }\r\n        }\r\n    }, 100)\r\n}"]},"metadata":{},"sourceType":"module"}