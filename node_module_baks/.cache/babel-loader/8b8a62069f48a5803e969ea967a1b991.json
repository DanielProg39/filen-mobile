{"ast":null,"code":"var en=require(\"../lang/en\");var nl=require(\"../lang/nl\");var hi=require(\"../lang/hi\");var de=require(\"../lang/de\");var fr=require(\"../lang/fr\");var da=require(\"../lang/da\");var es=require(\"../lang/es\");var translations={};translations['en']=en.translations['en'];translations['nl']=nl.translations['nl'];translations['hi']=hi.translations['hi'];translations['de']=de.translations['de'];translations['fr']=fr.translations['fr'];translations['da']=da.translations['da'];translations['es']=es.translations['es'];module.exports={get:function get(){var lang=arguments.length>0&&arguments[0]!==undefined?arguments[0]:\"en\";var text=arguments.length>1?arguments[1]:undefined;var firstUpperCase=arguments.length>2&&arguments[2]!==undefined?arguments[2]:true;var replaceFrom=arguments.length>3&&arguments[3]!==undefined?arguments[3]:[];var replaceTo=arguments.length>4&&arguments[4]!==undefined?arguments[4]:[];var gotText=translations[lang][text];if(!gotText){if(translations['en'][text]){gotText=translations['en'][text];}else{return\"NO_TRANSLATION_FOUND\";}}if(firstUpperCase){gotText=gotText.charAt(0).toUpperCase()+gotText.slice(1);}if(replaceFrom.length>0&&replaceTo.length>0){for(var i=0;i<replaceFrom.length;i++){gotText=gotText.split(replaceFrom[i]).join(replaceTo[i]);}}return gotText;},isAvailable:function isAvailable(lang){if(typeof translations[lang]!==\"undefined\"){return true;}return false;},list:function list(){return translations;},name:function name(){var lang=arguments.length>0&&arguments[0]!==undefined?arguments[0]:\"en\";switch(lang){case\"en\":return\"English\";break;case\"de\":return\"Deutsch\";break;case\"nl\":return\"Nederlands\";break;case\"hi\":return\"हिन्दी, हिंदी\";break;case\"fr\":return\"Français\";break;case\"da\":return\"Dansk\";break;case\"es\":return\"Español\";break;default:return\"Language name not found\";break;}}};","map":{"version":3,"sources":["/Users/jan/Documents/filen/app/src/utils/language.js"],"names":["en","require","nl","hi","de","fr","da","es","translations","module","exports","get","lang","text","firstUpperCase","replaceFrom","replaceTo","gotText","charAt","toUpperCase","slice","length","i","split","join","isAvailable","list","name"],"mappings":"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","sourcesContent":["const en = require(\"../lang/en\")\r\nconst nl = require(\"../lang/nl\")\r\nconst hi = require(\"../lang/hi\")\r\nconst de = require(\"../lang/de\")\r\nconst fr = require(\"../lang/fr\")\r\nconst da = require(\"../lang/da\")\r\nconst es = require(\"../lang/es\")\r\n\r\nlet translations = {}\r\n\r\ntranslations['en'] = en.translations['en']\r\ntranslations['nl'] = nl.translations['nl']\r\ntranslations['hi'] = hi.translations['hi']\r\ntranslations['de'] = de.translations['de']\r\ntranslations['fr'] = fr.translations['fr']\r\ntranslations['da'] = da.translations['da']\r\ntranslations['es'] = es.translations['es']\r\n\r\nmodule.exports = {\r\n    get: (lang = \"en\", text, firstUpperCase = true, replaceFrom = [], replaceTo = []) => {\r\n        let gotText = translations[lang][text]\r\n\r\n        if(!gotText){\r\n            if(translations['en'][text]){\r\n                gotText = translations['en'][text]\r\n            }\r\n            else{\r\n                return \"NO_TRANSLATION_FOUND\"\r\n            }\r\n        }\r\n\r\n        if(firstUpperCase){\r\n            gotText = gotText.charAt(0).toUpperCase() + gotText.slice(1)\r\n        }\r\n\r\n        if(replaceFrom.length > 0 && replaceTo.length > 0){\r\n            for(let i = 0; i < replaceFrom.length; i++){\r\n                gotText = gotText.split(replaceFrom[i]).join(replaceTo[i])\r\n            }\r\n        }\r\n\r\n        return gotText\r\n    },\r\n    isAvailable: (lang) => {\r\n        if(typeof translations[lang] !== \"undefined\"){\r\n            return true\r\n        }\r\n\r\n        return false\r\n    },\r\n    list: () => {\r\n        return translations\r\n    },\r\n    name: (lang = \"en\") => {\r\n        switch(lang){\r\n            case \"en\":\r\n                return \"English\"\r\n            break\r\n            case \"de\":\r\n                return \"Deutsch\"\r\n            break\r\n            case \"nl\":\r\n                return \"Nederlands\"\r\n            break\r\n            case \"hi\":\r\n                return \"हिन्दी, हिंदी\"\r\n            break\r\n            case \"fr\":\r\n                return \"Français\"\r\n            break\r\n            case \"da\":\r\n                return \"Dansk\"\r\n            break\r\n            case \"es\":\r\n                return \"Español\"\r\n            break\r\n            default:\r\n                return \"Language name not found\"\r\n            break\r\n        }\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}