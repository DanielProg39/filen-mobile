{"ast":null,"code":"import * as language from \"../utils/language\";\nimport { loadingController, modalController, popoverController, alertController, actionSheetController } from \"@ionic/core\";\nimport * as Ionicons from 'ionicons/icons';\nimport { Capacitor, Plugins } from \"@capacitor/core\";\nimport { isPlatform, getPlatforms } from \"@ionic/react\";\n\nconst utils = require(\"../utils/utils\");\n\nconst safeAreaInsets = require('safe-area-insets');\n\nexport async function openSettingsModal() {\n  let appLang = this.state.lang;\n  let appDarkMode = this.state.darkMode;\n  let appSettings = this.state.settings;\n  let appState = this.state;\n  let deviceInfo = await Plugins.Device.getInfo();\n  let modalId = \"settings-modal-\" + utils.generateRandomClassName();\n  customElements.define(modalId, class ModalContent extends HTMLElement {\n    connectedCallback() {\n      this.innerHTML = `\n                <ion-header style=\"margin-top: ` + (isPlatform(\"ipad\") ? safeAreaInsets.top : 0) + `px;\">\n                    <ion-toolbar>\n                        <ion-buttons slot=\"start\">\n                            <ion-button onclick=\"window.customFunctions.dismissModal()\">\n                                <ion-icon slot=\"icon-only\" icon=\"` + Ionicons.arrowBack + `\"></ion-icon>\n                            </ion-button>\n                        </ion-buttons>\n                        <ion-title>\n                            ` + language.get(appLang, \"settingsHeader\") + `\n                        </ion-title>\n                    </ion-toolbar>\n                </ion-header>\n                <ion-content style=\"--background: ` + (appDarkMode ? \"#1E1E1E\" : \"white\") + `\" fullscreen>\n                    <ion-list>\n                        <ion-item-divider style=\"--background: ` + (appDarkMode ? \"#1E1E1E\" : \"white\") + `\">\n                            <ion-label>\n                                ` + language.get(appLang, \"settingsAccountHeader\") + `\n                            </ion-label>\n                        </ion-item-divider>\n                        <ion-item lines=\"none\">\n                            <ion-label>\n                                ` + appState.userEmail + `\n                            </ion-label>\n                            <ion-buttons slot=\"end\">\n                                <ion-button color=\"` + (appDarkMode ? `dark` : `light`) + `\" fill=\"solid\" onClick=\"window.open('https://filen.io/my-account/file-manager/settings', '_system'); return false;\">\n                                    ` + language.get(appLang, \"accountSettings\") + `\n                                </ion-button>\n                            </ion-buttons>\n                        </ion-item>\n                        <ion-item lines=\"none\">\n                            <ion-label>\n                                ` + language.get(appLang, \"settingsAccountUsage\") + `\n                            </ion-label>\n                            <ion-buttons slot=\"end\">\n                                <ion-button fill=\"none\">\n                                    ` + appState.userStorageUsageMenuText + `\n                                </ion-button>\n                            </ion-buttons>\n                        </ion-item>\n                        ` + (isPlatform(\"ios\") ? `` : `\n                            <ion-item lines=\"none\">\n                                <ion-label>\n                                    ` + language.get(appLang, \"settingsAccountPro\") + `\n                                </ion-label>\n                                <ion-buttons slot=\"end\">\n                                    ` + (appState.userMaxStorage >= 107374182400 ? `\n                                        <ion-button fill=\"none\">\n                                            <ion-icon slot=\"icon-only\" icon=\"` + Ionicons.checkbox + `\"></ion-icon>\n                                        </ion-button>\n                                    ` : `\n                                        <ion-button fill=\"solid\" color=\"` + (appDarkMode ? `dark` : `light`) + `\" onClick=\"window.open('https://filen.io/pro', '_system'); return false;\">\n                                            ` + language.get(appLang, \"settingsAccountGoPro\") + `\n                                        </ion-button>\n                                    `) + `\n                                </ion-buttons>\n                            </ion-item>\n                        `) + `\n                        <ion-item-divider style=\"--background: ` + (appDarkMode ? \"#1E1E1E\" : \"white\") + `\">\n                            <ion-label>\n                                ` + language.get(appLang, \"settingsGeneralHeader\") + `\n                            </ion-label>\n                        </ion-item-divider>\n                        <ion-item lines=\"none\">\n                            <ion-label>\n                                ` + language.get(appLang, \"darkMode\") + `\n                            </ion-label>\n                            <ion-toggle slot=\"end\" id=\"settings-dark-mode-toggle\" onClick=\"window.customFunctions.settingsToggleDarkMode()\" ` + (appDarkMode && \"checked\") + `></ion-toggle>\n                        </ion-item>\n                        <ion-item lines=\"none\">\n                            <ion-label>\n                                ` + language.get(appLang, \"onlyUseWifiForDownloads\") + `\n                            </ion-label>\n                            <ion-toggle slot=\"end\" id=\"settings-only-wifi-toggle\" onClick=\"window.customFunctions.toggleOnlyWifi()\" ` + (appSettings.onlyWifi && \"checked\") + `></ion-toggle>\n                        </ion-item>\n                        <ion-item lines=\"none\" button>\n                            <ion-label onClick=\"window.customFunctions.openLanguageModal()\">` + language.get(appLang, \"settingsLanguage\") + `</ion-label>\n                            <!--<ion-select id=\"settings-lang-select\" value=\"` + appLang + `\" cancel-text=\"` + language.get(appLang, \"cancel\") + `\" ok-text=\"` + language.get(appLang, \"alertOkButton\") + `\" interface=\"alert\">\n                                ` + utils.getLanguageSelection() + `\n                            </ion-select>-->\n                        </ion-item>\n                        <ion-item-divider style=\"--background: ` + (appDarkMode ? \"#1E1E1E\" : \"white\") + `\">\n                            <ion-label>\n                                ` + language.get(appLang, \"settingsAppHeader\") + `\n                            </ion-label>\n                        </ion-item-divider>\n                        <ion-item lines=\"none\">\n                            <a onClick=\"window.customFunctions.doLogout()\">` + language.get(appLang, \"settingsLogoutBtn\", true, [\"__EMAIL__\"], [appState.userEmail]) + `</a>\n                        </ion-item>\n                        <ion-item lines=\"none\">\n                            <ion-label>\n                                ` + language.get(appLang, \"settingsVersion\") + `\n                            </ion-label>\n                            <ion-buttons slot=\"end\">\n                                <ion-button fill=\"none\">\n                                    ` + deviceInfo.appVersion + `\n                                </ion-button>\n                            </ion-buttons>\n                        </ion-item>\n                        <ion-item lines=\"none\">\n                            <ion-label>\n                                ` + language.get(appLang, \"settingsClearThumbnailCache\") + `\n                            </ion-label>\n                            <ion-buttons slot=\"end\">\n                                <ion-button fill=\"solid\" color=\"` + (appDarkMode ? `dark` : `light`) + `\" onClick=\"window.customFunctions.clearThumbnailCache()\">\n                                    ` + language.get(appLang, \"settingsClearThumbnailCacheBtn\") + `\n                                </ion-button>\n                            </ion-buttons>\n                        </ion-item>\n                    </ion-list>\n                </ion-content>\n            `;\n    }\n\n  });\n  let modal = await modalController.create({\n    component: modalId,\n    swipeToClose: false,\n    showBackdrop: false,\n    backdropDismiss: false,\n    cssClass: \"modal-fullscreen\"\n  });\n  await modal.present();\n  clearInterval(window.customVariables.selectLangInterval);\n  window.customVariables.selectLangInterval = setInterval(async () => {\n    if (typeof document.getElementById(\"settings-lang-select\") == \"undefined\") {\n      return clearInterval(window.customVariables.selectLangInterval);\n    }\n\n    if (document.getElementById(\"settings-lang-select\") == null) {\n      return clearInterval(window.customVariables.selectLangInterval);\n    }\n\n    if (typeof document.getElementById(\"settings-lang-select\").value == \"undefined\") {\n      return clearInterval(window.customVariables.selectLangInterval);\n    }\n\n    let selectedLang = document.getElementById(\"settings-lang-select\").value;\n\n    if (selectedLang !== appLang) {\n      if (language.isAvailable(selectedLang)) {\n        clearInterval(window.customVariables.selectLangInterval);\n        await Plugins.Storage.set({\n          key: \"lang\",\n          value: selectedLang\n        });\n        return document.location.href = \"index.html\";\n      }\n    }\n  }, 100);\n  return true;\n}","map":{"version":3,"sources":["/Users/jan/Documents/filen/app/src/components/settings.js"],"names":["language","loadingController","modalController","popoverController","alertController","actionSheetController","Ionicons","Capacitor","Plugins","isPlatform","getPlatforms","utils","require","safeAreaInsets","openSettingsModal","appLang","state","lang","appDarkMode","darkMode","appSettings","settings","appState","deviceInfo","Device","getInfo","modalId","generateRandomClassName","customElements","define","ModalContent","HTMLElement","connectedCallback","innerHTML","top","arrowBack","get","userEmail","userStorageUsageMenuText","userMaxStorage","checkbox","onlyWifi","getLanguageSelection","appVersion","modal","create","component","swipeToClose","showBackdrop","backdropDismiss","cssClass","present","clearInterval","window","customVariables","selectLangInterval","setInterval","document","getElementById","value","selectedLang","isAvailable","Storage","set","key","location","href"],"mappings":"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","sourcesContent":["import * as language from \"../utils/language\"\r\nimport { loadingController, modalController, popoverController, alertController, actionSheetController } from \"@ionic/core\"\r\nimport * as Ionicons from 'ionicons/icons'\r\nimport { Capacitor, Plugins } from \"@capacitor/core\"\r\nimport { isPlatform, getPlatforms } from \"@ionic/react\"\r\n\r\nconst utils = require(\"../utils/utils\")\r\nconst safeAreaInsets = require('safe-area-insets')\r\n\r\nexport async function openSettingsModal(){\r\n    let appLang = this.state.lang\r\n    let appDarkMode = this.state.darkMode\r\n    let appSettings = this.state.settings\r\n    let appState = this.state\r\n    let deviceInfo = await Plugins.Device.getInfo()\r\n    let modalId = \"settings-modal-\" + utils.generateRandomClassName()\r\n\r\n    customElements.define(modalId, class ModalContent extends HTMLElement {\r\n        connectedCallback() {\r\n            this.innerHTML = `\r\n                <ion-header style=\"margin-top: ` + (isPlatform(\"ipad\") ? safeAreaInsets.top : 0) + `px;\">\r\n                    <ion-toolbar>\r\n                        <ion-buttons slot=\"start\">\r\n                            <ion-button onclick=\"window.customFunctions.dismissModal()\">\r\n                                <ion-icon slot=\"icon-only\" icon=\"` + Ionicons.arrowBack + `\"></ion-icon>\r\n                            </ion-button>\r\n                        </ion-buttons>\r\n                        <ion-title>\r\n                            ` + language.get(appLang, \"settingsHeader\") + `\r\n                        </ion-title>\r\n                    </ion-toolbar>\r\n                </ion-header>\r\n                <ion-content style=\"--background: ` + (appDarkMode ? \"#1E1E1E\" : \"white\") + `\" fullscreen>\r\n                    <ion-list>\r\n                        <ion-item-divider style=\"--background: ` + (appDarkMode ? \"#1E1E1E\" : \"white\") + `\">\r\n                            <ion-label>\r\n                                ` + language.get(appLang, \"settingsAccountHeader\") + `\r\n                            </ion-label>\r\n                        </ion-item-divider>\r\n                        <ion-item lines=\"none\">\r\n                            <ion-label>\r\n                                ` + appState.userEmail + `\r\n                            </ion-label>\r\n                            <ion-buttons slot=\"end\">\r\n                                <ion-button color=\"` + (appDarkMode ? `dark` : `light`) + `\" fill=\"solid\" onClick=\"window.open('https://filen.io/my-account/file-manager/settings', '_system'); return false;\">\r\n                                    ` + language.get(appLang, \"accountSettings\") + `\r\n                                </ion-button>\r\n                            </ion-buttons>\r\n                        </ion-item>\r\n                        <ion-item lines=\"none\">\r\n                            <ion-label>\r\n                                ` + language.get(appLang, \"settingsAccountUsage\") + `\r\n                            </ion-label>\r\n                            <ion-buttons slot=\"end\">\r\n                                <ion-button fill=\"none\">\r\n                                    ` + appState.userStorageUsageMenuText + `\r\n                                </ion-button>\r\n                            </ion-buttons>\r\n                        </ion-item>\r\n                        ` + (isPlatform(\"ios\") ? `` : `\r\n                            <ion-item lines=\"none\">\r\n                                <ion-label>\r\n                                    ` + language.get(appLang, \"settingsAccountPro\") + `\r\n                                </ion-label>\r\n                                <ion-buttons slot=\"end\">\r\n                                    ` + (appState.userMaxStorage >= 107374182400 ? `\r\n                                        <ion-button fill=\"none\">\r\n                                            <ion-icon slot=\"icon-only\" icon=\"` + Ionicons.checkbox + `\"></ion-icon>\r\n                                        </ion-button>\r\n                                    ` : `\r\n                                        <ion-button fill=\"solid\" color=\"` + (appDarkMode ? `dark` : `light`) + `\" onClick=\"window.open('https://filen.io/pro', '_system'); return false;\">\r\n                                            ` + language.get(appLang, \"settingsAccountGoPro\") + `\r\n                                        </ion-button>\r\n                                    `) + `\r\n                                </ion-buttons>\r\n                            </ion-item>\r\n                        `) + `\r\n                        <ion-item-divider style=\"--background: ` + (appDarkMode ? \"#1E1E1E\" : \"white\") + `\">\r\n                            <ion-label>\r\n                                ` + language.get(appLang, \"settingsGeneralHeader\") + `\r\n                            </ion-label>\r\n                        </ion-item-divider>\r\n                        <ion-item lines=\"none\">\r\n                            <ion-label>\r\n                                ` + language.get(appLang, \"darkMode\") + `\r\n                            </ion-label>\r\n                            <ion-toggle slot=\"end\" id=\"settings-dark-mode-toggle\" onClick=\"window.customFunctions.settingsToggleDarkMode()\" ` + (appDarkMode && \"checked\") + `></ion-toggle>\r\n                        </ion-item>\r\n                        <ion-item lines=\"none\">\r\n                            <ion-label>\r\n                                ` + language.get(appLang, \"onlyUseWifiForDownloads\") + `\r\n                            </ion-label>\r\n                            <ion-toggle slot=\"end\" id=\"settings-only-wifi-toggle\" onClick=\"window.customFunctions.toggleOnlyWifi()\" ` + (appSettings.onlyWifi && \"checked\") + `></ion-toggle>\r\n                        </ion-item>\r\n                        <ion-item lines=\"none\" button>\r\n                            <ion-label onClick=\"window.customFunctions.openLanguageModal()\">` + language.get(appLang, \"settingsLanguage\") + `</ion-label>\r\n                            <!--<ion-select id=\"settings-lang-select\" value=\"` + appLang + `\" cancel-text=\"` + language.get(appLang, \"cancel\") + `\" ok-text=\"` + language.get(appLang, \"alertOkButton\") + `\" interface=\"alert\">\r\n                                ` + utils.getLanguageSelection() + `\r\n                            </ion-select>-->\r\n                        </ion-item>\r\n                        <ion-item-divider style=\"--background: ` + (appDarkMode ? \"#1E1E1E\" : \"white\") + `\">\r\n                            <ion-label>\r\n                                ` + language.get(appLang, \"settingsAppHeader\") + `\r\n                            </ion-label>\r\n                        </ion-item-divider>\r\n                        <ion-item lines=\"none\">\r\n                            <a onClick=\"window.customFunctions.doLogout()\">` + language.get(appLang, \"settingsLogoutBtn\", true, [\"__EMAIL__\"], [appState.userEmail]) + `</a>\r\n                        </ion-item>\r\n                        <ion-item lines=\"none\">\r\n                            <ion-label>\r\n                                ` + language.get(appLang, \"settingsVersion\") + `\r\n                            </ion-label>\r\n                            <ion-buttons slot=\"end\">\r\n                                <ion-button fill=\"none\">\r\n                                    ` + deviceInfo.appVersion + `\r\n                                </ion-button>\r\n                            </ion-buttons>\r\n                        </ion-item>\r\n                        <ion-item lines=\"none\">\r\n                            <ion-label>\r\n                                ` + language.get(appLang, \"settingsClearThumbnailCache\") + `\r\n                            </ion-label>\r\n                            <ion-buttons slot=\"end\">\r\n                                <ion-button fill=\"solid\" color=\"` + (appDarkMode ? `dark` : `light`) + `\" onClick=\"window.customFunctions.clearThumbnailCache()\">\r\n                                    ` + language.get(appLang, \"settingsClearThumbnailCacheBtn\") + `\r\n                                </ion-button>\r\n                            </ion-buttons>\r\n                        </ion-item>\r\n                    </ion-list>\r\n                </ion-content>\r\n            `\r\n        }\r\n    })\r\n\r\n    let modal = await modalController.create({\r\n        component: modalId,\r\n        swipeToClose: false,\r\n        showBackdrop: false,\r\n        backdropDismiss: false,\r\n        cssClass: \"modal-fullscreen\"\r\n    })\r\n\r\n    await modal.present()\r\n\r\n    clearInterval(window.customVariables.selectLangInterval)\r\n\r\n    window.customVariables.selectLangInterval = setInterval(async () => {\r\n        if(typeof document.getElementById(\"settings-lang-select\") == \"undefined\"){\r\n            return clearInterval(window.customVariables.selectLangInterval)\r\n        }\r\n\r\n        if(document.getElementById(\"settings-lang-select\") == null){\r\n            return clearInterval(window.customVariables.selectLangInterval)\r\n        }\r\n\r\n        if(typeof document.getElementById(\"settings-lang-select\").value == \"undefined\"){\r\n            return clearInterval(window.customVariables.selectLangInterval)\r\n        }\r\n\r\n        let selectedLang = document.getElementById(\"settings-lang-select\").value\r\n\r\n        if(selectedLang !== appLang){\r\n            if(language.isAvailable(selectedLang)){\r\n                clearInterval(window.customVariables.selectLangInterval)\r\n\r\n                await Plugins.Storage.set({ key: \"lang\", value: selectedLang })\r\n\r\n                return document.location.href = \"index.html\"\r\n            }\r\n        }\r\n    }, 100)\r\n\r\n    return true\r\n}"]},"metadata":{},"sourceType":"module"}